# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path
from lexico import tokens, errores
import ply.yacc as yacc
from sintactico import parser as parser_sintactico, errores2
from semantico import parser as parser_semantico, errores3, variables_existentes, funciones_existentes

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Kathy\Documents\GitHub\ProyectoPHP-AnalizadoresLSS\GUI\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1319x792")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 792,
    width = 1319,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    659.0,
    415.0,
    image=image_image_1
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    651.0,
    280.0,
    image=entry_image_1
)
entry_1 = Text(
    bd=0,
    bg="#0E0000",
    fg="#FFFFFF",
    highlightthickness=0,
    font=("Calibri Light", 14),
    wrap="word",
    padx=10,
    pady=5
)
entry_1.place(
    x=49.0,
    y=40.0,
    width=1204.0,
    height=460.0
)

canvas.create_rectangle(
    0.0,
    511.0,
    1319.0,
    573.0,
    fill="#080000",
    outline="")

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    88.0,
    553.0,
    image=image_image_2
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    659.5,
    677.0,
    image=entry_image_2
)
entry_2 = Text(
    bd=0,
    bg="#040000",
    fg="#FFFFFF",
    highlightthickness=0,
    font=("Calibri Light", 16),  # Cambiar fuente y tamaño del texto
    wrap="word",  # Ajustar texto automáticamente en el área
    padx=10,  # Espaciado interno horizontal
    pady=10
)
entry_2.place(
    x=0.0,
    y=562.0,
    width=1319.0,
    height=228.0
)

entry_2.config(state="disabled")

canvas.create_rectangle(
    0.0,
    0.0,
    1319.0,
    39.0,
    fill="#660001",
    outline="")

canvas.create_text(
    588.0,
    9.0,
    anchor="nw",
    text="PHP IDE Prototype",
    fill="#FFFFFF",
    font=("Inter", 16 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    relief="flat",
    bg="#090000",
    activebackground="#090000"
)
button_1.place(
    x=638.0,
    y=517.0,
    width=40.0,
    height=41.02564239501953
)

canvas.create_text(
    15.0,
    44.0,
    anchor="nw",
    text="1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19",
    fill="#FFFFFF",
    font=("Itim Regular", 20 * -1)
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    relief="flat",
    bg="#660002",
    activebackground="#660002"
)
button_2.place(
    x=1290.0,
    y=7.0,
    width=19.0,
    height=24.0
)

entry_2.tag_configure("rojo", foreground="red")
entry_2.tag_configure("verde", foreground="green")

def configurar_run():
    dato = entry_1.get("1.0", "end-1c")
    print(dato)
    result1 = parser_sintactico.parse(dato)
    result2 = parser_semantico.parse(dato)  # Llama al parser para analizar los datos
    lista_errores = errores + errores2 + errores3
    entry_2.config(state="normal")  # Habilitar para modificar
    entry_2.delete("1.0", "end")  # Limpiar el contenido
    if lista_errores:
        entry_2.insert("1.0", lista_errores[0][0:6], "rojo")  # Insertar el texto extraído
        entry_2.insert("end", lista_errores[0][6:])  # Insertar el texto extraído
    else:
        entry_2.insert("1.0", "Análisis exitoso!", "verde")  # Insertar el texto extraído
    entry_2.config(state="disabled")  # Deshabilitar el widget después de modificarlo
    lista_errores.clear()
    errores.clear()
    errores2.clear()
    errores3.clear()
    variables_existentes.clear()
    funciones_existentes.clear()

button_1.config(command=configurar_run)
button_2.config(command=window.quit)  # Comando para cerrar la ventana

window.resizable(False, False)
window.mainloop()
