Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COUNT
    PERIOD

Grammar

Rule 0     S' -> programa
Rule 1     programa -> bloque
Rule 2     programa -> bloque programa
Rule 3     programa -> comment bloque programa
Rule 4     comment -> COMMENT1
Rule 5     comment -> COMMENT1 NEWLINE
Rule 6     bloque -> sentencia NEWLINE
Rule 7     bloque -> sentencia
Rule 8     bloque -> NEWLINE
Rule 9     sentencia -> print
Rule 10    sentencia -> asignacion
Rule 11    sentencia -> variable
Rule 12    sentencia -> funcion
Rule 13    sentencia -> if
Rule 14    sentencia -> for
Rule 15    sentencia -> invocar
Rule 16    sentencia -> operacionModificadoras SEMICOLON
Rule 17    asignacion -> VARIABLE ASSIGN expresion SEMICOLON
Rule 18    variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON
Rule 19    variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON
Rule 20    variable -> VARIABLE ASSIGN_ADD error SEMICOLON
Rule 21    variable -> VARIABLE ASSIGN_SUB error SEMICOLON
Rule 22    print -> ECHO datos SEMICOLON
Rule 23    print -> ECHO SEMICOLON
Rule 24    print -> ECHO argumentos SEMICOLON
Rule 25    if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
Rule 26    if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
Rule 27    for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
Rule 28    expresion -> argumentos
Rule 29    expresion -> invocar
Rule 30    expresion -> operacionAritmetica
Rule 31    expresion -> operacionRelacional
Rule 32    expresion -> readline
Rule 33    expresion -> arregloIndexado
Rule 34    expresion -> arregloDeclarado
Rule 35    expresion -> operacionLogica
Rule 36    expresion -> operadorLogico
Rule 37    argumentosFuncion -> argumentoFuncion
Rule 38    argumentosFuncion -> argumentoFuncion argumentosFuncion
Rule 39    argumentoFuncion -> VARIABLE
Rule 40    argumentoFuncion -> d_strings
Rule 41    argumentoFuncion -> d_numericos
Rule 42    argumentoFuncion -> d_booleanos
Rule 43    argumentos -> datos COMMA argumentos
Rule 44    argumentos -> datos
Rule 45    datos -> VARIABLE
Rule 46    datos -> d_strings
Rule 47    datos -> d_numericos
Rule 48    datos -> d_booleanos
Rule 49    d_numericos -> NUMBER
Rule 50    d_numericos -> FLOAT
Rule 51    d_strings -> STRING
Rule 52    d_booleanos -> BOOLEAN
Rule 53    operacionAritmetica -> d_numericos operadorAritmetico d_numericos
Rule 54    operacionAritmetica -> VARIABLE operadorAritmetico d_numericos
Rule 55    operacionAritmetica -> d_numericos operadorAritmetico VARIABLE
Rule 56    operacionAritmetica -> VARIABLE operadorAritmetico VARIABLE
Rule 57    operacionAritmetica -> d_numericos operadorAritmetico operacionAritmetica
Rule 58    operacionAritmetica -> error operadorAritmetico error
Rule 59    operacionModificadoras -> VARIABLE INCREMENT
Rule 60    operacionModificadoras -> VARIABLE DECREMENT
Rule 61    operacionLogica -> operacionRelacional operadorLogico operacionRelacional
Rule 62    operacionLogica -> operacionRelacional operadorLogico operacionLogica
Rule 63    operacionLogica -> <empty>
Rule 64    operacionRelacional -> operacionRelacionalGeneral
Rule 65    operacionRelacional -> operacionRelacionalNumerica
Rule 66    operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos
Rule 67    operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos
Rule 68    operacionRelacionalNumerica -> datos operadorRelacionalNumerico VARIABLE
Rule 69    operacionRelacionalNumerica -> datos operadorRelacionalNumerico error
Rule 70    operadorAritmetico -> PLUS
Rule 71    operadorAritmetico -> MINUS
Rule 72    operadorAritmetico -> TIMES
Rule 73    operadorAritmetico -> DIVIDE
Rule 74    operadorAritmetico -> MOD
Rule 75    operadorLogico -> LOGICAL_AND
Rule 76    operadorLogico -> LOGICAL_OR
Rule 77    operadorLogico -> LOGICAL_NOT
Rule 78    operadorRelacionalGeneral -> EQUALS
Rule 79    operadorRelacionalGeneral -> DIFFERENT
Rule 80    operadorRelacionalNumerico -> GREATER
Rule 81    operadorRelacionalNumerico -> LESS
Rule 82    operadorRelacionalNumerico -> GREATER_EQUALS
Rule 83    operadorRelacionalNumerico -> LESS_EQUALS
Rule 84    arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
Rule 85    cuerpoArregloDeclarado -> datos ASSIGNATION datos
Rule 86    cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado
Rule 87    arregloIndexado -> LCOR datos_comma RCOR
Rule 88    funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
Rule 89    funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
Rule 90    invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
Rule 91    invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON
Rule 92    datos_comma -> datos
Rule 93    datos_comma -> datos COMMA datos_comma
Rule 94    cuerpoFuncion -> programa RETURN expresion SEMICOLON NEWLINE
Rule 95    cuerpoFuncion -> programa
Rule 96    cuerpoFuncion -> RETURN expresion SEMICOLON NEWLINE
Rule 97    readline -> READLINE LPAREN RPAREN

Terminals, with rules where they appear

ASSIGN               : 17
ASSIGNATION          : 85 86
ASSIGN_ADD           : 18 20
ASSIGN_SUB           : 19 21
BOOLEAN              : 52
COMMA                : 43 86 93
COMMENT1             : 4 5
COUNT                : 
DECREMENT            : 60
DIFFERENT            : 79
DIVIDE               : 73
ECHO                 : 22 23 24
ELSE                 : 26
EQUALS               : 78
FLOAT                : 50
FOR                  : 27
FUNCTION             : 88 89
FUNCTION_NAME        : 88 89 90 91
GREATER              : 80
GREATER_EQUALS       : 82
IF                   : 25 26
INCREMENT            : 59
LCOR                 : 84 87
LESS                 : 81
LESS_EQUALS          : 83
LKEY                 : 25 26 26 27 88 89
LOGICAL_AND          : 75
LOGICAL_NOT          : 77
LOGICAL_OR           : 76
LPAREN               : 25 26 27 88 89 90 91 97
MINUS                : 71
MOD                  : 74
NEWLINE              : 5 6 8 25 26 26 26 27 27 84 84 86 88 89 94 96
NUMBER               : 49
PERIOD               : 
PLUS                 : 70
RCOR                 : 84 87
READLINE             : 97
RETURN               : 94 96
RKEY                 : 25 26 26 27 88 89
RPAREN               : 25 26 27 88 89 90 91 97
SEMICOLON            : 16 17 18 19 20 21 22 23 24 27 90 91 94 96
STRING               : 51
TIMES                : 72
VARIABLE             : 17 18 19 20 21 27 39 45 54 55 56 56 59 60 68
error                : 20 21 58 58 69

Nonterminals, with rules where they appear

argumentoFuncion     : 37 38
argumentos           : 24 28 43
argumentosFuncion    : 38 88
arregloDeclarado     : 34
arregloIndexado      : 33
asignacion           : 10 27
bloque               : 1 2 3
comment              : 3
cuerpoArregloDeclarado : 84 86
cuerpoFuncion        : 88 89
d_booleanos          : 42 48
d_numericos          : 18 19 41 47 53 53 54 55 57 67
d_strings            : 40 46
datos                : 22 27 43 44 66 66 67 68 69 85 85 86 86 92 93
datos_comma          : 87 90 93
expresion            : 17 94 96
for                  : 14
funcion              : 12
if                   : 13
invocar              : 15 29
operacionAritmetica  : 30 57
operacionLogica      : 35 62
operacionModificadoras : 16 27
operacionRelacional  : 25 26 31 61 61 62
operacionRelacionalGeneral : 64
operacionRelacionalNumerica : 65
operadorAritmetico   : 53 54 55 56 57 58
operadorLogico       : 36 61 62
operadorRelacionalGeneral : 66
operadorRelacionalNumerico : 27 67 68 69
print                : 9
programa             : 2 3 25 26 26 27 94 95 0
readline             : 32
sentencia            : 6 7
variable             : 11

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    programa                       shift and go to state 1
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 1

    (0) S' -> programa .



state 2

    (1) programa -> bloque .
    (2) programa -> bloque . programa
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    $end            reduce using rule 1 (programa -> bloque .)
    RETURN          reduce using rule 1 (programa -> bloque .)
    RKEY            reduce using rule 1 (programa -> bloque .)
    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    bloque                         shift and go to state 2
    programa                       shift and go to state 21
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 3

    (3) programa -> comment . bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    NEWLINE         shift and go to state 5
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    bloque                         shift and go to state 22
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 4

    (6) bloque -> sentencia . NEWLINE
    (7) bloque -> sentencia .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 23
    COMMENT1        reduce using rule 7 (bloque -> sentencia .)
    ECHO            reduce using rule 7 (bloque -> sentencia .)
    VARIABLE        reduce using rule 7 (bloque -> sentencia .)
    FUNCTION        reduce using rule 7 (bloque -> sentencia .)
    IF              reduce using rule 7 (bloque -> sentencia .)
    FOR             reduce using rule 7 (bloque -> sentencia .)
    FUNCTION_NAME   reduce using rule 7 (bloque -> sentencia .)
    $end            reduce using rule 7 (bloque -> sentencia .)
    RETURN          reduce using rule 7 (bloque -> sentencia .)
    RKEY            reduce using rule 7 (bloque -> sentencia .)

  ! NEWLINE         [ reduce using rule 7 (bloque -> sentencia .) ]


state 5

    (8) bloque -> NEWLINE .

    NEWLINE         reduce using rule 8 (bloque -> NEWLINE .)
    COMMENT1        reduce using rule 8 (bloque -> NEWLINE .)
    ECHO            reduce using rule 8 (bloque -> NEWLINE .)
    VARIABLE        reduce using rule 8 (bloque -> NEWLINE .)
    FUNCTION        reduce using rule 8 (bloque -> NEWLINE .)
    IF              reduce using rule 8 (bloque -> NEWLINE .)
    FOR             reduce using rule 8 (bloque -> NEWLINE .)
    FUNCTION_NAME   reduce using rule 8 (bloque -> NEWLINE .)
    $end            reduce using rule 8 (bloque -> NEWLINE .)
    RETURN          reduce using rule 8 (bloque -> NEWLINE .)
    RKEY            reduce using rule 8 (bloque -> NEWLINE .)


state 6

    (4) comment -> COMMENT1 .
    (5) comment -> COMMENT1 . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    ECHO            reduce using rule 4 (comment -> COMMENT1 .)
    VARIABLE        reduce using rule 4 (comment -> COMMENT1 .)
    FUNCTION        reduce using rule 4 (comment -> COMMENT1 .)
    IF              reduce using rule 4 (comment -> COMMENT1 .)
    FOR             reduce using rule 4 (comment -> COMMENT1 .)
    FUNCTION_NAME   reduce using rule 4 (comment -> COMMENT1 .)
    NEWLINE         shift and go to state 24

  ! NEWLINE         [ reduce using rule 4 (comment -> COMMENT1 .) ]


state 7

    (9) sentencia -> print .

    NEWLINE         reduce using rule 9 (sentencia -> print .)
    COMMENT1        reduce using rule 9 (sentencia -> print .)
    ECHO            reduce using rule 9 (sentencia -> print .)
    VARIABLE        reduce using rule 9 (sentencia -> print .)
    FUNCTION        reduce using rule 9 (sentencia -> print .)
    IF              reduce using rule 9 (sentencia -> print .)
    FOR             reduce using rule 9 (sentencia -> print .)
    FUNCTION_NAME   reduce using rule 9 (sentencia -> print .)
    $end            reduce using rule 9 (sentencia -> print .)
    RETURN          reduce using rule 9 (sentencia -> print .)
    RKEY            reduce using rule 9 (sentencia -> print .)


state 8

    (10) sentencia -> asignacion .

    NEWLINE         reduce using rule 10 (sentencia -> asignacion .)
    COMMENT1        reduce using rule 10 (sentencia -> asignacion .)
    ECHO            reduce using rule 10 (sentencia -> asignacion .)
    VARIABLE        reduce using rule 10 (sentencia -> asignacion .)
    FUNCTION        reduce using rule 10 (sentencia -> asignacion .)
    IF              reduce using rule 10 (sentencia -> asignacion .)
    FOR             reduce using rule 10 (sentencia -> asignacion .)
    FUNCTION_NAME   reduce using rule 10 (sentencia -> asignacion .)
    $end            reduce using rule 10 (sentencia -> asignacion .)
    RETURN          reduce using rule 10 (sentencia -> asignacion .)
    RKEY            reduce using rule 10 (sentencia -> asignacion .)


state 9

    (11) sentencia -> variable .

    NEWLINE         reduce using rule 11 (sentencia -> variable .)
    COMMENT1        reduce using rule 11 (sentencia -> variable .)
    ECHO            reduce using rule 11 (sentencia -> variable .)
    VARIABLE        reduce using rule 11 (sentencia -> variable .)
    FUNCTION        reduce using rule 11 (sentencia -> variable .)
    IF              reduce using rule 11 (sentencia -> variable .)
    FOR             reduce using rule 11 (sentencia -> variable .)
    FUNCTION_NAME   reduce using rule 11 (sentencia -> variable .)
    $end            reduce using rule 11 (sentencia -> variable .)
    RETURN          reduce using rule 11 (sentencia -> variable .)
    RKEY            reduce using rule 11 (sentencia -> variable .)


state 10

    (12) sentencia -> funcion .

    NEWLINE         reduce using rule 12 (sentencia -> funcion .)
    COMMENT1        reduce using rule 12 (sentencia -> funcion .)
    ECHO            reduce using rule 12 (sentencia -> funcion .)
    VARIABLE        reduce using rule 12 (sentencia -> funcion .)
    FUNCTION        reduce using rule 12 (sentencia -> funcion .)
    IF              reduce using rule 12 (sentencia -> funcion .)
    FOR             reduce using rule 12 (sentencia -> funcion .)
    FUNCTION_NAME   reduce using rule 12 (sentencia -> funcion .)
    $end            reduce using rule 12 (sentencia -> funcion .)
    RETURN          reduce using rule 12 (sentencia -> funcion .)
    RKEY            reduce using rule 12 (sentencia -> funcion .)


state 11

    (13) sentencia -> if .

    NEWLINE         reduce using rule 13 (sentencia -> if .)
    COMMENT1        reduce using rule 13 (sentencia -> if .)
    ECHO            reduce using rule 13 (sentencia -> if .)
    VARIABLE        reduce using rule 13 (sentencia -> if .)
    FUNCTION        reduce using rule 13 (sentencia -> if .)
    IF              reduce using rule 13 (sentencia -> if .)
    FOR             reduce using rule 13 (sentencia -> if .)
    FUNCTION_NAME   reduce using rule 13 (sentencia -> if .)
    $end            reduce using rule 13 (sentencia -> if .)
    RETURN          reduce using rule 13 (sentencia -> if .)
    RKEY            reduce using rule 13 (sentencia -> if .)


state 12

    (14) sentencia -> for .

    NEWLINE         reduce using rule 14 (sentencia -> for .)
    COMMENT1        reduce using rule 14 (sentencia -> for .)
    ECHO            reduce using rule 14 (sentencia -> for .)
    VARIABLE        reduce using rule 14 (sentencia -> for .)
    FUNCTION        reduce using rule 14 (sentencia -> for .)
    IF              reduce using rule 14 (sentencia -> for .)
    FOR             reduce using rule 14 (sentencia -> for .)
    FUNCTION_NAME   reduce using rule 14 (sentencia -> for .)
    $end            reduce using rule 14 (sentencia -> for .)
    RETURN          reduce using rule 14 (sentencia -> for .)
    RKEY            reduce using rule 14 (sentencia -> for .)


state 13

    (15) sentencia -> invocar .

    NEWLINE         reduce using rule 15 (sentencia -> invocar .)
    COMMENT1        reduce using rule 15 (sentencia -> invocar .)
    ECHO            reduce using rule 15 (sentencia -> invocar .)
    VARIABLE        reduce using rule 15 (sentencia -> invocar .)
    FUNCTION        reduce using rule 15 (sentencia -> invocar .)
    IF              reduce using rule 15 (sentencia -> invocar .)
    FOR             reduce using rule 15 (sentencia -> invocar .)
    FUNCTION_NAME   reduce using rule 15 (sentencia -> invocar .)
    $end            reduce using rule 15 (sentencia -> invocar .)
    RETURN          reduce using rule 15 (sentencia -> invocar .)
    RKEY            reduce using rule 15 (sentencia -> invocar .)


state 14

    (16) sentencia -> operacionModificadoras . SEMICOLON

    SEMICOLON       shift and go to state 25


state 15

    (22) print -> ECHO . datos SEMICOLON
    (23) print -> ECHO . SEMICOLON
    (24) print -> ECHO . argumentos SEMICOLON
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (43) argumentos -> . datos COMMA argumentos
    (44) argumentos -> . datos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    SEMICOLON       shift and go to state 27
    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos                          shift and go to state 26
    argumentos                     shift and go to state 28
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 16

    (17) asignacion -> VARIABLE . ASSIGN expresion SEMICOLON
    (18) variable -> VARIABLE . ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> VARIABLE . ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> VARIABLE . ASSIGN_ADD error SEMICOLON
    (21) variable -> VARIABLE . ASSIGN_SUB error SEMICOLON
    (59) operacionModificadoras -> VARIABLE . INCREMENT
    (60) operacionModificadoras -> VARIABLE . DECREMENT

    ASSIGN          shift and go to state 37
    ASSIGN_ADD      shift and go to state 38
    ASSIGN_SUB      shift and go to state 39
    INCREMENT       shift and go to state 40
    DECREMENT       shift and go to state 41


state 17

    (88) funcion -> FUNCTION . FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> FUNCTION . FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY

    FUNCTION_NAME   shift and go to state 42


state 18

    (90) invocar -> FUNCTION_NAME . LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> FUNCTION_NAME . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 43


state 19

    (25) if -> IF . LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> IF . LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    LPAREN          shift and go to state 44


state 20

    (27) for -> FOR . LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE

    LPAREN          shift and go to state 45


state 21

    (2) programa -> bloque programa .

    $end            reduce using rule 2 (programa -> bloque programa .)
    RETURN          reduce using rule 2 (programa -> bloque programa .)
    RKEY            reduce using rule 2 (programa -> bloque programa .)


state 22

    (3) programa -> comment bloque . programa
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    comment                        shift and go to state 3
    bloque                         shift and go to state 2
    programa                       shift and go to state 46
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 23

    (6) bloque -> sentencia NEWLINE .

    NEWLINE         reduce using rule 6 (bloque -> sentencia NEWLINE .)
    COMMENT1        reduce using rule 6 (bloque -> sentencia NEWLINE .)
    ECHO            reduce using rule 6 (bloque -> sentencia NEWLINE .)
    VARIABLE        reduce using rule 6 (bloque -> sentencia NEWLINE .)
    FUNCTION        reduce using rule 6 (bloque -> sentencia NEWLINE .)
    IF              reduce using rule 6 (bloque -> sentencia NEWLINE .)
    FOR             reduce using rule 6 (bloque -> sentencia NEWLINE .)
    FUNCTION_NAME   reduce using rule 6 (bloque -> sentencia NEWLINE .)
    $end            reduce using rule 6 (bloque -> sentencia NEWLINE .)
    RETURN          reduce using rule 6 (bloque -> sentencia NEWLINE .)
    RKEY            reduce using rule 6 (bloque -> sentencia NEWLINE .)


state 24

    (5) comment -> COMMENT1 NEWLINE .

    NEWLINE         reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    ECHO            reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    VARIABLE        reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    FUNCTION        reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    IF              reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    FOR             reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    FUNCTION_NAME   reduce using rule 5 (comment -> COMMENT1 NEWLINE .)


state 25

    (16) sentencia -> operacionModificadoras SEMICOLON .

    NEWLINE         reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    COMMENT1        reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    ECHO            reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    VARIABLE        reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    FUNCTION        reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    IF              reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    FOR             reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    FUNCTION_NAME   reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    $end            reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    RETURN          reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)
    RKEY            reduce using rule 16 (sentencia -> operacionModificadoras SEMICOLON .)


state 26

    (22) print -> ECHO datos . SEMICOLON
    (43) argumentos -> datos . COMMA argumentos
    (44) argumentos -> datos .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 47
    COMMA           shift and go to state 48

  ! SEMICOLON       [ reduce using rule 44 (argumentos -> datos .) ]


state 27

    (23) print -> ECHO SEMICOLON .

    NEWLINE         reduce using rule 23 (print -> ECHO SEMICOLON .)
    COMMENT1        reduce using rule 23 (print -> ECHO SEMICOLON .)
    ECHO            reduce using rule 23 (print -> ECHO SEMICOLON .)
    VARIABLE        reduce using rule 23 (print -> ECHO SEMICOLON .)
    FUNCTION        reduce using rule 23 (print -> ECHO SEMICOLON .)
    IF              reduce using rule 23 (print -> ECHO SEMICOLON .)
    FOR             reduce using rule 23 (print -> ECHO SEMICOLON .)
    FUNCTION_NAME   reduce using rule 23 (print -> ECHO SEMICOLON .)
    $end            reduce using rule 23 (print -> ECHO SEMICOLON .)
    RETURN          reduce using rule 23 (print -> ECHO SEMICOLON .)
    RKEY            reduce using rule 23 (print -> ECHO SEMICOLON .)


state 28

    (24) print -> ECHO argumentos . SEMICOLON

    SEMICOLON       shift and go to state 49


state 29

    (45) datos -> VARIABLE .

    SEMICOLON       reduce using rule 45 (datos -> VARIABLE .)
    COMMA           reduce using rule 45 (datos -> VARIABLE .)
    RPAREN          reduce using rule 45 (datos -> VARIABLE .)
    EQUALS          reduce using rule 45 (datos -> VARIABLE .)
    DIFFERENT       reduce using rule 45 (datos -> VARIABLE .)
    GREATER         reduce using rule 45 (datos -> VARIABLE .)
    LESS            reduce using rule 45 (datos -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 45 (datos -> VARIABLE .)
    LESS_EQUALS     reduce using rule 45 (datos -> VARIABLE .)
    RCOR            reduce using rule 45 (datos -> VARIABLE .)
    LOGICAL_AND     reduce using rule 45 (datos -> VARIABLE .)
    LOGICAL_OR      reduce using rule 45 (datos -> VARIABLE .)
    LOGICAL_NOT     reduce using rule 45 (datos -> VARIABLE .)
    ASSIGNATION     reduce using rule 45 (datos -> VARIABLE .)
    NEWLINE         reduce using rule 45 (datos -> VARIABLE .)


state 30

    (46) datos -> d_strings .

    SEMICOLON       reduce using rule 46 (datos -> d_strings .)
    COMMA           reduce using rule 46 (datos -> d_strings .)
    EQUALS          reduce using rule 46 (datos -> d_strings .)
    DIFFERENT       reduce using rule 46 (datos -> d_strings .)
    GREATER         reduce using rule 46 (datos -> d_strings .)
    LESS            reduce using rule 46 (datos -> d_strings .)
    GREATER_EQUALS  reduce using rule 46 (datos -> d_strings .)
    LESS_EQUALS     reduce using rule 46 (datos -> d_strings .)
    RPAREN          reduce using rule 46 (datos -> d_strings .)
    RCOR            reduce using rule 46 (datos -> d_strings .)
    LOGICAL_AND     reduce using rule 46 (datos -> d_strings .)
    LOGICAL_OR      reduce using rule 46 (datos -> d_strings .)
    LOGICAL_NOT     reduce using rule 46 (datos -> d_strings .)
    ASSIGNATION     reduce using rule 46 (datos -> d_strings .)
    NEWLINE         reduce using rule 46 (datos -> d_strings .)


state 31

    (47) datos -> d_numericos .

    SEMICOLON       reduce using rule 47 (datos -> d_numericos .)
    COMMA           reduce using rule 47 (datos -> d_numericos .)
    RPAREN          reduce using rule 47 (datos -> d_numericos .)
    EQUALS          reduce using rule 47 (datos -> d_numericos .)
    DIFFERENT       reduce using rule 47 (datos -> d_numericos .)
    GREATER         reduce using rule 47 (datos -> d_numericos .)
    LESS            reduce using rule 47 (datos -> d_numericos .)
    GREATER_EQUALS  reduce using rule 47 (datos -> d_numericos .)
    LESS_EQUALS     reduce using rule 47 (datos -> d_numericos .)
    RCOR            reduce using rule 47 (datos -> d_numericos .)
    LOGICAL_AND     reduce using rule 47 (datos -> d_numericos .)
    LOGICAL_OR      reduce using rule 47 (datos -> d_numericos .)
    LOGICAL_NOT     reduce using rule 47 (datos -> d_numericos .)
    ASSIGNATION     reduce using rule 47 (datos -> d_numericos .)
    NEWLINE         reduce using rule 47 (datos -> d_numericos .)


state 32

    (48) datos -> d_booleanos .

    SEMICOLON       reduce using rule 48 (datos -> d_booleanos .)
    COMMA           reduce using rule 48 (datos -> d_booleanos .)
    EQUALS          reduce using rule 48 (datos -> d_booleanos .)
    DIFFERENT       reduce using rule 48 (datos -> d_booleanos .)
    GREATER         reduce using rule 48 (datos -> d_booleanos .)
    LESS            reduce using rule 48 (datos -> d_booleanos .)
    GREATER_EQUALS  reduce using rule 48 (datos -> d_booleanos .)
    LESS_EQUALS     reduce using rule 48 (datos -> d_booleanos .)
    RPAREN          reduce using rule 48 (datos -> d_booleanos .)
    RCOR            reduce using rule 48 (datos -> d_booleanos .)
    LOGICAL_AND     reduce using rule 48 (datos -> d_booleanos .)
    LOGICAL_OR      reduce using rule 48 (datos -> d_booleanos .)
    LOGICAL_NOT     reduce using rule 48 (datos -> d_booleanos .)
    ASSIGNATION     reduce using rule 48 (datos -> d_booleanos .)
    NEWLINE         reduce using rule 48 (datos -> d_booleanos .)


state 33

    (51) d_strings -> STRING .

    SEMICOLON       reduce using rule 51 (d_strings -> STRING .)
    COMMA           reduce using rule 51 (d_strings -> STRING .)
    EQUALS          reduce using rule 51 (d_strings -> STRING .)
    DIFFERENT       reduce using rule 51 (d_strings -> STRING .)
    GREATER         reduce using rule 51 (d_strings -> STRING .)
    LESS            reduce using rule 51 (d_strings -> STRING .)
    GREATER_EQUALS  reduce using rule 51 (d_strings -> STRING .)
    LESS_EQUALS     reduce using rule 51 (d_strings -> STRING .)
    RPAREN          reduce using rule 51 (d_strings -> STRING .)
    RCOR            reduce using rule 51 (d_strings -> STRING .)
    VARIABLE        reduce using rule 51 (d_strings -> STRING .)
    STRING          reduce using rule 51 (d_strings -> STRING .)
    NUMBER          reduce using rule 51 (d_strings -> STRING .)
    FLOAT           reduce using rule 51 (d_strings -> STRING .)
    BOOLEAN         reduce using rule 51 (d_strings -> STRING .)
    LOGICAL_AND     reduce using rule 51 (d_strings -> STRING .)
    LOGICAL_OR      reduce using rule 51 (d_strings -> STRING .)
    LOGICAL_NOT     reduce using rule 51 (d_strings -> STRING .)
    ASSIGNATION     reduce using rule 51 (d_strings -> STRING .)
    NEWLINE         reduce using rule 51 (d_strings -> STRING .)


state 34

    (49) d_numericos -> NUMBER .

    SEMICOLON       reduce using rule 49 (d_numericos -> NUMBER .)
    COMMA           reduce using rule 49 (d_numericos -> NUMBER .)
    PLUS            reduce using rule 49 (d_numericos -> NUMBER .)
    MINUS           reduce using rule 49 (d_numericos -> NUMBER .)
    TIMES           reduce using rule 49 (d_numericos -> NUMBER .)
    DIVIDE          reduce using rule 49 (d_numericos -> NUMBER .)
    MOD             reduce using rule 49 (d_numericos -> NUMBER .)
    EQUALS          reduce using rule 49 (d_numericos -> NUMBER .)
    DIFFERENT       reduce using rule 49 (d_numericos -> NUMBER .)
    GREATER         reduce using rule 49 (d_numericos -> NUMBER .)
    LESS            reduce using rule 49 (d_numericos -> NUMBER .)
    GREATER_EQUALS  reduce using rule 49 (d_numericos -> NUMBER .)
    LESS_EQUALS     reduce using rule 49 (d_numericos -> NUMBER .)
    RPAREN          reduce using rule 49 (d_numericos -> NUMBER .)
    RCOR            reduce using rule 49 (d_numericos -> NUMBER .)
    VARIABLE        reduce using rule 49 (d_numericos -> NUMBER .)
    STRING          reduce using rule 49 (d_numericos -> NUMBER .)
    NUMBER          reduce using rule 49 (d_numericos -> NUMBER .)
    FLOAT           reduce using rule 49 (d_numericos -> NUMBER .)
    BOOLEAN         reduce using rule 49 (d_numericos -> NUMBER .)
    LOGICAL_AND     reduce using rule 49 (d_numericos -> NUMBER .)
    LOGICAL_OR      reduce using rule 49 (d_numericos -> NUMBER .)
    LOGICAL_NOT     reduce using rule 49 (d_numericos -> NUMBER .)
    ASSIGNATION     reduce using rule 49 (d_numericos -> NUMBER .)
    NEWLINE         reduce using rule 49 (d_numericos -> NUMBER .)


state 35

    (50) d_numericos -> FLOAT .

    SEMICOLON       reduce using rule 50 (d_numericos -> FLOAT .)
    COMMA           reduce using rule 50 (d_numericos -> FLOAT .)
    PLUS            reduce using rule 50 (d_numericos -> FLOAT .)
    MINUS           reduce using rule 50 (d_numericos -> FLOAT .)
    TIMES           reduce using rule 50 (d_numericos -> FLOAT .)
    DIVIDE          reduce using rule 50 (d_numericos -> FLOAT .)
    MOD             reduce using rule 50 (d_numericos -> FLOAT .)
    EQUALS          reduce using rule 50 (d_numericos -> FLOAT .)
    DIFFERENT       reduce using rule 50 (d_numericos -> FLOAT .)
    GREATER         reduce using rule 50 (d_numericos -> FLOAT .)
    LESS            reduce using rule 50 (d_numericos -> FLOAT .)
    GREATER_EQUALS  reduce using rule 50 (d_numericos -> FLOAT .)
    LESS_EQUALS     reduce using rule 50 (d_numericos -> FLOAT .)
    RPAREN          reduce using rule 50 (d_numericos -> FLOAT .)
    RCOR            reduce using rule 50 (d_numericos -> FLOAT .)
    VARIABLE        reduce using rule 50 (d_numericos -> FLOAT .)
    STRING          reduce using rule 50 (d_numericos -> FLOAT .)
    NUMBER          reduce using rule 50 (d_numericos -> FLOAT .)
    FLOAT           reduce using rule 50 (d_numericos -> FLOAT .)
    BOOLEAN         reduce using rule 50 (d_numericos -> FLOAT .)
    LOGICAL_AND     reduce using rule 50 (d_numericos -> FLOAT .)
    LOGICAL_OR      reduce using rule 50 (d_numericos -> FLOAT .)
    LOGICAL_NOT     reduce using rule 50 (d_numericos -> FLOAT .)
    ASSIGNATION     reduce using rule 50 (d_numericos -> FLOAT .)
    NEWLINE         reduce using rule 50 (d_numericos -> FLOAT .)


state 36

    (52) d_booleanos -> BOOLEAN .

    SEMICOLON       reduce using rule 52 (d_booleanos -> BOOLEAN .)
    COMMA           reduce using rule 52 (d_booleanos -> BOOLEAN .)
    EQUALS          reduce using rule 52 (d_booleanos -> BOOLEAN .)
    DIFFERENT       reduce using rule 52 (d_booleanos -> BOOLEAN .)
    GREATER         reduce using rule 52 (d_booleanos -> BOOLEAN .)
    LESS            reduce using rule 52 (d_booleanos -> BOOLEAN .)
    GREATER_EQUALS  reduce using rule 52 (d_booleanos -> BOOLEAN .)
    LESS_EQUALS     reduce using rule 52 (d_booleanos -> BOOLEAN .)
    RPAREN          reduce using rule 52 (d_booleanos -> BOOLEAN .)
    RCOR            reduce using rule 52 (d_booleanos -> BOOLEAN .)
    VARIABLE        reduce using rule 52 (d_booleanos -> BOOLEAN .)
    STRING          reduce using rule 52 (d_booleanos -> BOOLEAN .)
    NUMBER          reduce using rule 52 (d_booleanos -> BOOLEAN .)
    FLOAT           reduce using rule 52 (d_booleanos -> BOOLEAN .)
    BOOLEAN         reduce using rule 52 (d_booleanos -> BOOLEAN .)
    LOGICAL_AND     reduce using rule 52 (d_booleanos -> BOOLEAN .)
    LOGICAL_OR      reduce using rule 52 (d_booleanos -> BOOLEAN .)
    LOGICAL_NOT     reduce using rule 52 (d_booleanos -> BOOLEAN .)
    ASSIGNATION     reduce using rule 52 (d_booleanos -> BOOLEAN .)
    NEWLINE         reduce using rule 52 (d_booleanos -> BOOLEAN .)


state 37

    (17) asignacion -> VARIABLE ASSIGN . expresion SEMICOLON
    (28) expresion -> . argumentos
    (29) expresion -> . invocar
    (30) expresion -> . operacionAritmetica
    (31) expresion -> . operacionRelacional
    (32) expresion -> . readline
    (33) expresion -> . arregloIndexado
    (34) expresion -> . arregloDeclarado
    (35) expresion -> . operacionLogica
    (36) expresion -> . operadorLogico
    (43) argumentos -> . datos COMMA argumentos
    (44) argumentos -> . datos
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (53) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (54) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (55) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (56) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (57) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (58) operacionAritmetica -> . error operadorAritmetico error
    (64) operacionRelacional -> . operacionRelacionalGeneral
    (65) operacionRelacional -> . operacionRelacionalNumerica
    (97) readline -> . READLINE LPAREN RPAREN
    (87) arregloIndexado -> . LCOR datos_comma RCOR
    (84) arregloDeclarado -> . LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (61) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (62) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (63) operacionLogica -> .
    (75) operadorLogico -> . LOGICAL_AND
    (76) operadorLogico -> . LOGICAL_OR
    (77) operadorLogico -> . LOGICAL_NOT
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (66) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (67) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (68) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico VARIABLE
    (69) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (51) d_strings -> . STRING
    (52) d_booleanos -> . BOOLEAN

    FUNCTION_NAME   shift and go to state 18
    VARIABLE        shift and go to state 50
    error           shift and go to state 63
    READLINE        shift and go to state 66
    LCOR            shift and go to state 67
    SEMICOLON       reduce using rule 63 (operacionLogica -> .)
    LOGICAL_AND     shift and go to state 68
    LOGICAL_OR      shift and go to state 69
    LOGICAL_NOT     shift and go to state 70
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 36

    expresion                      shift and go to state 51
    argumentos                     shift and go to state 52
    invocar                        shift and go to state 53
    operacionAritmetica            shift and go to state 54
    operacionRelacional            shift and go to state 55
    readline                       shift and go to state 56
    arregloIndexado                shift and go to state 57
    arregloDeclarado               shift and go to state 58
    operacionLogica                shift and go to state 59
    operadorLogico                 shift and go to state 60
    datos                          shift and go to state 61
    d_numericos                    shift and go to state 62
    operacionRelacionalGeneral     shift and go to state 64
    operacionRelacionalNumerica    shift and go to state 65
    d_strings                      shift and go to state 30
    d_booleanos                    shift and go to state 32

state 38

    (18) variable -> VARIABLE ASSIGN_ADD . d_numericos SEMICOLON
    (20) variable -> VARIABLE ASSIGN_ADD . error SEMICOLON
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT

    error           shift and go to state 72
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35

    d_numericos                    shift and go to state 71

state 39

    (19) variable -> VARIABLE ASSIGN_SUB . d_numericos SEMICOLON
    (21) variable -> VARIABLE ASSIGN_SUB . error SEMICOLON
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT

    error           shift and go to state 74
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35

    d_numericos                    shift and go to state 73

state 40

    (59) operacionModificadoras -> VARIABLE INCREMENT .

    SEMICOLON       reduce using rule 59 (operacionModificadoras -> VARIABLE INCREMENT .)
    RPAREN          reduce using rule 59 (operacionModificadoras -> VARIABLE INCREMENT .)


state 41

    (60) operacionModificadoras -> VARIABLE DECREMENT .

    SEMICOLON       reduce using rule 60 (operacionModificadoras -> VARIABLE DECREMENT .)
    RPAREN          reduce using rule 60 (operacionModificadoras -> VARIABLE DECREMENT .)


state 42

    (88) funcion -> FUNCTION FUNCTION_NAME . LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> FUNCTION FUNCTION_NAME . LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY

    LPAREN          shift and go to state 75


state 43

    (90) invocar -> FUNCTION_NAME LPAREN . datos_comma RPAREN SEMICOLON
    (91) invocar -> FUNCTION_NAME LPAREN . RPAREN SEMICOLON
    (92) datos_comma -> . datos
    (93) datos_comma -> . datos COMMA datos_comma
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    RPAREN          shift and go to state 77
    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos_comma                    shift and go to state 76
    datos                          shift and go to state 78
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 44

    (25) if -> IF LPAREN . operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> IF LPAREN . operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (64) operacionRelacional -> . operacionRelacionalGeneral
    (65) operacionRelacional -> . operacionRelacionalNumerica
    (66) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (67) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (68) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico VARIABLE
    (69) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    operacionRelacional            shift and go to state 79
    operacionRelacionalGeneral     shift and go to state 64
    operacionRelacionalNumerica    shift and go to state 65
    datos                          shift and go to state 80
    d_numericos                    shift and go to state 31
    d_strings                      shift and go to state 30
    d_booleanos                    shift and go to state 32

state 45

    (27) for -> FOR LPAREN . asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON

    VARIABLE        shift and go to state 82

    asignacion                     shift and go to state 81

state 46

    (3) programa -> comment bloque programa .

    $end            reduce using rule 3 (programa -> comment bloque programa .)
    RETURN          reduce using rule 3 (programa -> comment bloque programa .)
    RKEY            reduce using rule 3 (programa -> comment bloque programa .)


state 47

    (22) print -> ECHO datos SEMICOLON .

    NEWLINE         reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    COMMENT1        reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    ECHO            reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    VARIABLE        reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    FUNCTION        reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    IF              reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    FOR             reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    $end            reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    RETURN          reduce using rule 22 (print -> ECHO datos SEMICOLON .)
    RKEY            reduce using rule 22 (print -> ECHO datos SEMICOLON .)


state 48

    (43) argumentos -> datos COMMA . argumentos
    (43) argumentos -> . datos COMMA argumentos
    (44) argumentos -> . datos
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos                          shift and go to state 83
    argumentos                     shift and go to state 84
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 49

    (24) print -> ECHO argumentos SEMICOLON .

    NEWLINE         reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    COMMENT1        reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    ECHO            reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    VARIABLE        reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    FUNCTION        reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    IF              reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    FOR             reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    $end            reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    RETURN          reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)
    RKEY            reduce using rule 24 (print -> ECHO argumentos SEMICOLON .)


state 50

    (54) operacionAritmetica -> VARIABLE . operadorAritmetico d_numericos
    (56) operacionAritmetica -> VARIABLE . operadorAritmetico VARIABLE
    (45) datos -> VARIABLE .
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD

    COMMA           reduce using rule 45 (datos -> VARIABLE .)
    EQUALS          reduce using rule 45 (datos -> VARIABLE .)
    DIFFERENT       reduce using rule 45 (datos -> VARIABLE .)
    GREATER         reduce using rule 45 (datos -> VARIABLE .)
    LESS            reduce using rule 45 (datos -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 45 (datos -> VARIABLE .)
    LESS_EQUALS     reduce using rule 45 (datos -> VARIABLE .)
    SEMICOLON       reduce using rule 45 (datos -> VARIABLE .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89
    MOD             shift and go to state 90

    operadorAritmetico             shift and go to state 85

state 51

    (17) asignacion -> VARIABLE ASSIGN expresion . SEMICOLON

    SEMICOLON       shift and go to state 91


state 52

    (28) expresion -> argumentos .

    SEMICOLON       reduce using rule 28 (expresion -> argumentos .)


state 53

    (29) expresion -> invocar .

    SEMICOLON       reduce using rule 29 (expresion -> invocar .)


state 54

    (30) expresion -> operacionAritmetica .

    SEMICOLON       reduce using rule 30 (expresion -> operacionAritmetica .)


state 55

    (31) expresion -> operacionRelacional .
    (61) operacionLogica -> operacionRelacional . operadorLogico operacionRelacional
    (62) operacionLogica -> operacionRelacional . operadorLogico operacionLogica
    (75) operadorLogico -> . LOGICAL_AND
    (76) operadorLogico -> . LOGICAL_OR
    (77) operadorLogico -> . LOGICAL_NOT

    SEMICOLON       reduce using rule 31 (expresion -> operacionRelacional .)
    LOGICAL_AND     shift and go to state 68
    LOGICAL_OR      shift and go to state 69
    LOGICAL_NOT     shift and go to state 70

    operadorLogico                 shift and go to state 92

state 56

    (32) expresion -> readline .

    SEMICOLON       reduce using rule 32 (expresion -> readline .)


state 57

    (33) expresion -> arregloIndexado .

    SEMICOLON       reduce using rule 33 (expresion -> arregloIndexado .)


state 58

    (34) expresion -> arregloDeclarado .

    SEMICOLON       reduce using rule 34 (expresion -> arregloDeclarado .)


state 59

    (35) expresion -> operacionLogica .

    SEMICOLON       reduce using rule 35 (expresion -> operacionLogica .)


state 60

    (36) expresion -> operadorLogico .

    SEMICOLON       reduce using rule 36 (expresion -> operadorLogico .)


state 61

    (43) argumentos -> datos . COMMA argumentos
    (44) argumentos -> datos .
    (66) operacionRelacionalGeneral -> datos . operadorRelacionalGeneral datos
    (67) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico d_numericos
    (68) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico VARIABLE
    (69) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico error
    (78) operadorRelacionalGeneral -> . EQUALS
    (79) operadorRelacionalGeneral -> . DIFFERENT
    (80) operadorRelacionalNumerico -> . GREATER
    (81) operadorRelacionalNumerico -> . LESS
    (82) operadorRelacionalNumerico -> . GREATER_EQUALS
    (83) operadorRelacionalNumerico -> . LESS_EQUALS

    COMMA           shift and go to state 48
    SEMICOLON       reduce using rule 44 (argumentos -> datos .)
    EQUALS          shift and go to state 95
    DIFFERENT       shift and go to state 96
    GREATER         shift and go to state 97
    LESS            shift and go to state 98
    GREATER_EQUALS  shift and go to state 99
    LESS_EQUALS     shift and go to state 100

    operadorRelacionalGeneral      shift and go to state 93
    operadorRelacionalNumerico     shift and go to state 94

state 62

    (53) operacionAritmetica -> d_numericos . operadorAritmetico d_numericos
    (55) operacionAritmetica -> d_numericos . operadorAritmetico VARIABLE
    (57) operacionAritmetica -> d_numericos . operadorAritmetico operacionAritmetica
    (47) datos -> d_numericos .
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD

    COMMA           reduce using rule 47 (datos -> d_numericos .)
    EQUALS          reduce using rule 47 (datos -> d_numericos .)
    DIFFERENT       reduce using rule 47 (datos -> d_numericos .)
    GREATER         reduce using rule 47 (datos -> d_numericos .)
    LESS            reduce using rule 47 (datos -> d_numericos .)
    GREATER_EQUALS  reduce using rule 47 (datos -> d_numericos .)
    LESS_EQUALS     reduce using rule 47 (datos -> d_numericos .)
    SEMICOLON       reduce using rule 47 (datos -> d_numericos .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89
    MOD             shift and go to state 90

    operadorAritmetico             shift and go to state 101

state 63

    (58) operacionAritmetica -> error . operadorAritmetico error
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD

    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89
    MOD             shift and go to state 90

    operadorAritmetico             shift and go to state 102

state 64

    (64) operacionRelacional -> operacionRelacionalGeneral .

    LOGICAL_AND     reduce using rule 64 (operacionRelacional -> operacionRelacionalGeneral .)
    LOGICAL_OR      reduce using rule 64 (operacionRelacional -> operacionRelacionalGeneral .)
    LOGICAL_NOT     reduce using rule 64 (operacionRelacional -> operacionRelacionalGeneral .)
    SEMICOLON       reduce using rule 64 (operacionRelacional -> operacionRelacionalGeneral .)
    RPAREN          reduce using rule 64 (operacionRelacional -> operacionRelacionalGeneral .)


state 65

    (65) operacionRelacional -> operacionRelacionalNumerica .

    LOGICAL_AND     reduce using rule 65 (operacionRelacional -> operacionRelacionalNumerica .)
    LOGICAL_OR      reduce using rule 65 (operacionRelacional -> operacionRelacionalNumerica .)
    LOGICAL_NOT     reduce using rule 65 (operacionRelacional -> operacionRelacionalNumerica .)
    SEMICOLON       reduce using rule 65 (operacionRelacional -> operacionRelacionalNumerica .)
    RPAREN          reduce using rule 65 (operacionRelacional -> operacionRelacionalNumerica .)


state 66

    (97) readline -> READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 103


state 67

    (87) arregloIndexado -> LCOR . datos_comma RCOR
    (84) arregloDeclarado -> LCOR . NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (92) datos_comma -> . datos
    (93) datos_comma -> . datos COMMA datos_comma
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    NEWLINE         shift and go to state 105
    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos_comma                    shift and go to state 104
    datos                          shift and go to state 78
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 68

    (75) operadorLogico -> LOGICAL_AND .

    SEMICOLON       reduce using rule 75 (operadorLogico -> LOGICAL_AND .)
    VARIABLE        reduce using rule 75 (operadorLogico -> LOGICAL_AND .)
    STRING          reduce using rule 75 (operadorLogico -> LOGICAL_AND .)
    NUMBER          reduce using rule 75 (operadorLogico -> LOGICAL_AND .)
    FLOAT           reduce using rule 75 (operadorLogico -> LOGICAL_AND .)
    BOOLEAN         reduce using rule 75 (operadorLogico -> LOGICAL_AND .)


state 69

    (76) operadorLogico -> LOGICAL_OR .

    SEMICOLON       reduce using rule 76 (operadorLogico -> LOGICAL_OR .)
    VARIABLE        reduce using rule 76 (operadorLogico -> LOGICAL_OR .)
    STRING          reduce using rule 76 (operadorLogico -> LOGICAL_OR .)
    NUMBER          reduce using rule 76 (operadorLogico -> LOGICAL_OR .)
    FLOAT           reduce using rule 76 (operadorLogico -> LOGICAL_OR .)
    BOOLEAN         reduce using rule 76 (operadorLogico -> LOGICAL_OR .)


state 70

    (77) operadorLogico -> LOGICAL_NOT .

    SEMICOLON       reduce using rule 77 (operadorLogico -> LOGICAL_NOT .)
    VARIABLE        reduce using rule 77 (operadorLogico -> LOGICAL_NOT .)
    STRING          reduce using rule 77 (operadorLogico -> LOGICAL_NOT .)
    NUMBER          reduce using rule 77 (operadorLogico -> LOGICAL_NOT .)
    FLOAT           reduce using rule 77 (operadorLogico -> LOGICAL_NOT .)
    BOOLEAN         reduce using rule 77 (operadorLogico -> LOGICAL_NOT .)


state 71

    (18) variable -> VARIABLE ASSIGN_ADD d_numericos . SEMICOLON

    SEMICOLON       shift and go to state 106


state 72

    (20) variable -> VARIABLE ASSIGN_ADD error . SEMICOLON

    SEMICOLON       shift and go to state 107


state 73

    (19) variable -> VARIABLE ASSIGN_SUB d_numericos . SEMICOLON

    SEMICOLON       shift and go to state 108


state 74

    (21) variable -> VARIABLE ASSIGN_SUB error . SEMICOLON

    SEMICOLON       shift and go to state 109


state 75

    (88) funcion -> FUNCTION FUNCTION_NAME LPAREN . argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> FUNCTION FUNCTION_NAME LPAREN . RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (37) argumentosFuncion -> . argumentoFuncion
    (38) argumentosFuncion -> . argumentoFuncion argumentosFuncion
    (39) argumentoFuncion -> . VARIABLE
    (40) argumentoFuncion -> . d_strings
    (41) argumentoFuncion -> . d_numericos
    (42) argumentoFuncion -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    RPAREN          shift and go to state 111
    VARIABLE        shift and go to state 113
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    argumentosFuncion              shift and go to state 110
    argumentoFuncion               shift and go to state 112
    d_strings                      shift and go to state 114
    d_numericos                    shift and go to state 115
    d_booleanos                    shift and go to state 116

state 76

    (90) invocar -> FUNCTION_NAME LPAREN datos_comma . RPAREN SEMICOLON

    RPAREN          shift and go to state 117


state 77

    (91) invocar -> FUNCTION_NAME LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 118


state 78

    (92) datos_comma -> datos .
    (93) datos_comma -> datos . COMMA datos_comma

    RPAREN          reduce using rule 92 (datos_comma -> datos .)
    RCOR            reduce using rule 92 (datos_comma -> datos .)
    COMMA           shift and go to state 119


state 79

    (25) if -> IF LPAREN operacionRelacional . RPAREN LKEY NEWLINE programa RKEY
    (26) if -> IF LPAREN operacionRelacional . RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    RPAREN          shift and go to state 120


state 80

    (66) operacionRelacionalGeneral -> datos . operadorRelacionalGeneral datos
    (67) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico d_numericos
    (68) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico VARIABLE
    (69) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico error
    (78) operadorRelacionalGeneral -> . EQUALS
    (79) operadorRelacionalGeneral -> . DIFFERENT
    (80) operadorRelacionalNumerico -> . GREATER
    (81) operadorRelacionalNumerico -> . LESS
    (82) operadorRelacionalNumerico -> . GREATER_EQUALS
    (83) operadorRelacionalNumerico -> . LESS_EQUALS

    EQUALS          shift and go to state 95
    DIFFERENT       shift and go to state 96
    GREATER         shift and go to state 97
    LESS            shift and go to state 98
    GREATER_EQUALS  shift and go to state 99
    LESS_EQUALS     shift and go to state 100

    operadorRelacionalGeneral      shift and go to state 93
    operadorRelacionalNumerico     shift and go to state 94

state 81

    (27) for -> FOR LPAREN asignacion . VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE

    VARIABLE        shift and go to state 121


state 82

    (17) asignacion -> VARIABLE . ASSIGN expresion SEMICOLON

    ASSIGN          shift and go to state 37


state 83

    (43) argumentos -> datos . COMMA argumentos
    (44) argumentos -> datos .

    COMMA           shift and go to state 48
    SEMICOLON       reduce using rule 44 (argumentos -> datos .)


state 84

    (43) argumentos -> datos COMMA argumentos .

    SEMICOLON       reduce using rule 43 (argumentos -> datos COMMA argumentos .)


state 85

    (54) operacionAritmetica -> VARIABLE operadorAritmetico . d_numericos
    (56) operacionAritmetica -> VARIABLE operadorAritmetico . VARIABLE
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT

    VARIABLE        shift and go to state 122
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35

    d_numericos                    shift and go to state 123

state 86

    (70) operadorAritmetico -> PLUS .

    VARIABLE        reduce using rule 70 (operadorAritmetico -> PLUS .)
    NUMBER          reduce using rule 70 (operadorAritmetico -> PLUS .)
    FLOAT           reduce using rule 70 (operadorAritmetico -> PLUS .)
    error           reduce using rule 70 (operadorAritmetico -> PLUS .)


state 87

    (71) operadorAritmetico -> MINUS .

    VARIABLE        reduce using rule 71 (operadorAritmetico -> MINUS .)
    NUMBER          reduce using rule 71 (operadorAritmetico -> MINUS .)
    FLOAT           reduce using rule 71 (operadorAritmetico -> MINUS .)
    error           reduce using rule 71 (operadorAritmetico -> MINUS .)


state 88

    (72) operadorAritmetico -> TIMES .

    VARIABLE        reduce using rule 72 (operadorAritmetico -> TIMES .)
    NUMBER          reduce using rule 72 (operadorAritmetico -> TIMES .)
    FLOAT           reduce using rule 72 (operadorAritmetico -> TIMES .)
    error           reduce using rule 72 (operadorAritmetico -> TIMES .)


state 89

    (73) operadorAritmetico -> DIVIDE .

    VARIABLE        reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    NUMBER          reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    FLOAT           reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    error           reduce using rule 73 (operadorAritmetico -> DIVIDE .)


state 90

    (74) operadorAritmetico -> MOD .

    VARIABLE        reduce using rule 74 (operadorAritmetico -> MOD .)
    NUMBER          reduce using rule 74 (operadorAritmetico -> MOD .)
    FLOAT           reduce using rule 74 (operadorAritmetico -> MOD .)
    error           reduce using rule 74 (operadorAritmetico -> MOD .)


state 91

    (17) asignacion -> VARIABLE ASSIGN expresion SEMICOLON .

    NEWLINE         reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    COMMENT1        reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    ECHO            reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    VARIABLE        reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    FUNCTION        reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    IF              reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    FOR             reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    FUNCTION_NAME   reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    $end            reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    RETURN          reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    RKEY            reduce using rule 17 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)


state 92

    (61) operacionLogica -> operacionRelacional operadorLogico . operacionRelacional
    (62) operacionLogica -> operacionRelacional operadorLogico . operacionLogica
    (64) operacionRelacional -> . operacionRelacionalGeneral
    (65) operacionRelacional -> . operacionRelacionalNumerica
    (61) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (62) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (63) operacionLogica -> .
    (66) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (67) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (68) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico VARIABLE
    (69) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    SEMICOLON       reduce using rule 63 (operacionLogica -> .)
    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    operacionRelacional            shift and go to state 124
    operacionLogica                shift and go to state 125
    operacionRelacionalGeneral     shift and go to state 64
    operacionRelacionalNumerica    shift and go to state 65
    datos                          shift and go to state 80
    d_numericos                    shift and go to state 31
    d_strings                      shift and go to state 30
    d_booleanos                    shift and go to state 32

state 93

    (66) operacionRelacionalGeneral -> datos operadorRelacionalGeneral . datos
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos                          shift and go to state 126
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 94

    (67) operacionRelacionalNumerica -> datos operadorRelacionalNumerico . d_numericos
    (68) operacionRelacionalNumerica -> datos operadorRelacionalNumerico . VARIABLE
    (69) operacionRelacionalNumerica -> datos operadorRelacionalNumerico . error
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT

    VARIABLE        shift and go to state 128
    error           shift and go to state 129
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35

    d_numericos                    shift and go to state 127

state 95

    (78) operadorRelacionalGeneral -> EQUALS .

    VARIABLE        reduce using rule 78 (operadorRelacionalGeneral -> EQUALS .)
    STRING          reduce using rule 78 (operadorRelacionalGeneral -> EQUALS .)
    NUMBER          reduce using rule 78 (operadorRelacionalGeneral -> EQUALS .)
    FLOAT           reduce using rule 78 (operadorRelacionalGeneral -> EQUALS .)
    BOOLEAN         reduce using rule 78 (operadorRelacionalGeneral -> EQUALS .)


state 96

    (79) operadorRelacionalGeneral -> DIFFERENT .

    VARIABLE        reduce using rule 79 (operadorRelacionalGeneral -> DIFFERENT .)
    STRING          reduce using rule 79 (operadorRelacionalGeneral -> DIFFERENT .)
    NUMBER          reduce using rule 79 (operadorRelacionalGeneral -> DIFFERENT .)
    FLOAT           reduce using rule 79 (operadorRelacionalGeneral -> DIFFERENT .)
    BOOLEAN         reduce using rule 79 (operadorRelacionalGeneral -> DIFFERENT .)


state 97

    (80) operadorRelacionalNumerico -> GREATER .

    VARIABLE        reduce using rule 80 (operadorRelacionalNumerico -> GREATER .)
    error           reduce using rule 80 (operadorRelacionalNumerico -> GREATER .)
    NUMBER          reduce using rule 80 (operadorRelacionalNumerico -> GREATER .)
    FLOAT           reduce using rule 80 (operadorRelacionalNumerico -> GREATER .)
    STRING          reduce using rule 80 (operadorRelacionalNumerico -> GREATER .)
    BOOLEAN         reduce using rule 80 (operadorRelacionalNumerico -> GREATER .)


state 98

    (81) operadorRelacionalNumerico -> LESS .

    VARIABLE        reduce using rule 81 (operadorRelacionalNumerico -> LESS .)
    error           reduce using rule 81 (operadorRelacionalNumerico -> LESS .)
    NUMBER          reduce using rule 81 (operadorRelacionalNumerico -> LESS .)
    FLOAT           reduce using rule 81 (operadorRelacionalNumerico -> LESS .)
    STRING          reduce using rule 81 (operadorRelacionalNumerico -> LESS .)
    BOOLEAN         reduce using rule 81 (operadorRelacionalNumerico -> LESS .)


state 99

    (82) operadorRelacionalNumerico -> GREATER_EQUALS .

    VARIABLE        reduce using rule 82 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    error           reduce using rule 82 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    NUMBER          reduce using rule 82 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    FLOAT           reduce using rule 82 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    STRING          reduce using rule 82 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    BOOLEAN         reduce using rule 82 (operadorRelacionalNumerico -> GREATER_EQUALS .)


state 100

    (83) operadorRelacionalNumerico -> LESS_EQUALS .

    VARIABLE        reduce using rule 83 (operadorRelacionalNumerico -> LESS_EQUALS .)
    error           reduce using rule 83 (operadorRelacionalNumerico -> LESS_EQUALS .)
    NUMBER          reduce using rule 83 (operadorRelacionalNumerico -> LESS_EQUALS .)
    FLOAT           reduce using rule 83 (operadorRelacionalNumerico -> LESS_EQUALS .)
    STRING          reduce using rule 83 (operadorRelacionalNumerico -> LESS_EQUALS .)
    BOOLEAN         reduce using rule 83 (operadorRelacionalNumerico -> LESS_EQUALS .)


state 101

    (53) operacionAritmetica -> d_numericos operadorAritmetico . d_numericos
    (55) operacionAritmetica -> d_numericos operadorAritmetico . VARIABLE
    (57) operacionAritmetica -> d_numericos operadorAritmetico . operacionAritmetica
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (53) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (54) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (55) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (56) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (57) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (58) operacionAritmetica -> . error operadorAritmetico error

    VARIABLE        shift and go to state 131
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    error           shift and go to state 63

    d_numericos                    shift and go to state 130
    operacionAritmetica            shift and go to state 132

state 102

    (58) operacionAritmetica -> error operadorAritmetico . error

    error           shift and go to state 133


state 103

    (97) readline -> READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 134


state 104

    (87) arregloIndexado -> LCOR datos_comma . RCOR

    RCOR            shift and go to state 135


state 105

    (84) arregloDeclarado -> LCOR NEWLINE . cuerpoArregloDeclarado NEWLINE RCOR
    (85) cuerpoArregloDeclarado -> . datos ASSIGNATION datos
    (86) cuerpoArregloDeclarado -> . datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    cuerpoArregloDeclarado         shift and go to state 136
    datos                          shift and go to state 137
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 106

    (18) variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .

    NEWLINE         reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    COMMENT1        reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    ECHO            reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    VARIABLE        reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    FUNCTION        reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    IF              reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    FOR             reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    $end            reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    RETURN          reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    RKEY            reduce using rule 18 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)


state 107

    (20) variable -> VARIABLE ASSIGN_ADD error SEMICOLON .

    NEWLINE         reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    COMMENT1        reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    ECHO            reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    VARIABLE        reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    FUNCTION        reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    IF              reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    FOR             reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    FUNCTION_NAME   reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    $end            reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    RETURN          reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    RKEY            reduce using rule 20 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)


state 108

    (19) variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .

    NEWLINE         reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    COMMENT1        reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    ECHO            reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    VARIABLE        reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    FUNCTION        reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    IF              reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    FOR             reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    $end            reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    RETURN          reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    RKEY            reduce using rule 19 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)


state 109

    (21) variable -> VARIABLE ASSIGN_SUB error SEMICOLON .

    NEWLINE         reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    COMMENT1        reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    ECHO            reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    VARIABLE        reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    FUNCTION        reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    IF              reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    FOR             reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    FUNCTION_NAME   reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    $end            reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    RETURN          reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    RKEY            reduce using rule 21 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)


state 110

    (88) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion . RPAREN LKEY NEWLINE cuerpoFuncion RKEY

    RPAREN          shift and go to state 138


state 111

    (89) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN . LKEY NEWLINE cuerpoFuncion RKEY

    LKEY            shift and go to state 139


state 112

    (37) argumentosFuncion -> argumentoFuncion .
    (38) argumentosFuncion -> argumentoFuncion . argumentosFuncion
    (37) argumentosFuncion -> . argumentoFuncion
    (38) argumentosFuncion -> . argumentoFuncion argumentosFuncion
    (39) argumentoFuncion -> . VARIABLE
    (40) argumentoFuncion -> . d_strings
    (41) argumentoFuncion -> . d_numericos
    (42) argumentoFuncion -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    RPAREN          reduce using rule 37 (argumentosFuncion -> argumentoFuncion .)
    VARIABLE        shift and go to state 113
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    argumentoFuncion               shift and go to state 112
    argumentosFuncion              shift and go to state 140
    d_strings                      shift and go to state 114
    d_numericos                    shift and go to state 115
    d_booleanos                    shift and go to state 116

state 113

    (39) argumentoFuncion -> VARIABLE .

    VARIABLE        reduce using rule 39 (argumentoFuncion -> VARIABLE .)
    STRING          reduce using rule 39 (argumentoFuncion -> VARIABLE .)
    NUMBER          reduce using rule 39 (argumentoFuncion -> VARIABLE .)
    FLOAT           reduce using rule 39 (argumentoFuncion -> VARIABLE .)
    BOOLEAN         reduce using rule 39 (argumentoFuncion -> VARIABLE .)
    RPAREN          reduce using rule 39 (argumentoFuncion -> VARIABLE .)


state 114

    (40) argumentoFuncion -> d_strings .

    VARIABLE        reduce using rule 40 (argumentoFuncion -> d_strings .)
    STRING          reduce using rule 40 (argumentoFuncion -> d_strings .)
    NUMBER          reduce using rule 40 (argumentoFuncion -> d_strings .)
    FLOAT           reduce using rule 40 (argumentoFuncion -> d_strings .)
    BOOLEAN         reduce using rule 40 (argumentoFuncion -> d_strings .)
    RPAREN          reduce using rule 40 (argumentoFuncion -> d_strings .)


state 115

    (41) argumentoFuncion -> d_numericos .

    VARIABLE        reduce using rule 41 (argumentoFuncion -> d_numericos .)
    STRING          reduce using rule 41 (argumentoFuncion -> d_numericos .)
    NUMBER          reduce using rule 41 (argumentoFuncion -> d_numericos .)
    FLOAT           reduce using rule 41 (argumentoFuncion -> d_numericos .)
    BOOLEAN         reduce using rule 41 (argumentoFuncion -> d_numericos .)
    RPAREN          reduce using rule 41 (argumentoFuncion -> d_numericos .)


state 116

    (42) argumentoFuncion -> d_booleanos .

    VARIABLE        reduce using rule 42 (argumentoFuncion -> d_booleanos .)
    STRING          reduce using rule 42 (argumentoFuncion -> d_booleanos .)
    NUMBER          reduce using rule 42 (argumentoFuncion -> d_booleanos .)
    FLOAT           reduce using rule 42 (argumentoFuncion -> d_booleanos .)
    BOOLEAN         reduce using rule 42 (argumentoFuncion -> d_booleanos .)
    RPAREN          reduce using rule 42 (argumentoFuncion -> d_booleanos .)


state 117

    (90) invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 141


state 118

    (91) invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .

    NEWLINE         reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    COMMENT1        reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    RKEY            reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 91 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)


state 119

    (93) datos_comma -> datos COMMA . datos_comma
    (92) datos_comma -> . datos
    (93) datos_comma -> . datos COMMA datos_comma
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos                          shift and go to state 78
    datos_comma                    shift and go to state 142
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 120

    (25) if -> IF LPAREN operacionRelacional RPAREN . LKEY NEWLINE programa RKEY
    (26) if -> IF LPAREN operacionRelacional RPAREN . LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    LKEY            shift and go to state 143


state 121

    (27) for -> FOR LPAREN asignacion VARIABLE . operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (80) operadorRelacionalNumerico -> . GREATER
    (81) operadorRelacionalNumerico -> . LESS
    (82) operadorRelacionalNumerico -> . GREATER_EQUALS
    (83) operadorRelacionalNumerico -> . LESS_EQUALS

    GREATER         shift and go to state 97
    LESS            shift and go to state 98
    GREATER_EQUALS  shift and go to state 99
    LESS_EQUALS     shift and go to state 100

    operadorRelacionalNumerico     shift and go to state 144

state 122

    (56) operacionAritmetica -> VARIABLE operadorAritmetico VARIABLE .

    SEMICOLON       reduce using rule 56 (operacionAritmetica -> VARIABLE operadorAritmetico VARIABLE .)


state 123

    (54) operacionAritmetica -> VARIABLE operadorAritmetico d_numericos .

    SEMICOLON       reduce using rule 54 (operacionAritmetica -> VARIABLE operadorAritmetico d_numericos .)


state 124

    (61) operacionLogica -> operacionRelacional operadorLogico operacionRelacional .
    (61) operacionLogica -> operacionRelacional . operadorLogico operacionRelacional
    (62) operacionLogica -> operacionRelacional . operadorLogico operacionLogica
    (75) operadorLogico -> . LOGICAL_AND
    (76) operadorLogico -> . LOGICAL_OR
    (77) operadorLogico -> . LOGICAL_NOT

    SEMICOLON       reduce using rule 61 (operacionLogica -> operacionRelacional operadorLogico operacionRelacional .)
    LOGICAL_AND     shift and go to state 68
    LOGICAL_OR      shift and go to state 69
    LOGICAL_NOT     shift and go to state 70

    operadorLogico                 shift and go to state 92

state 125

    (62) operacionLogica -> operacionRelacional operadorLogico operacionLogica .

    SEMICOLON       reduce using rule 62 (operacionLogica -> operacionRelacional operadorLogico operacionLogica .)


state 126

    (66) operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .

    LOGICAL_AND     reduce using rule 66 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    LOGICAL_OR      reduce using rule 66 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    LOGICAL_NOT     reduce using rule 66 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    SEMICOLON       reduce using rule 66 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    RPAREN          reduce using rule 66 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)


state 127

    (67) operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .

    LOGICAL_AND     reduce using rule 67 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    LOGICAL_OR      reduce using rule 67 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    LOGICAL_NOT     reduce using rule 67 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    SEMICOLON       reduce using rule 67 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    RPAREN          reduce using rule 67 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)


state 128

    (68) operacionRelacionalNumerica -> datos operadorRelacionalNumerico VARIABLE .

    LOGICAL_AND     reduce using rule 68 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico VARIABLE .)
    LOGICAL_OR      reduce using rule 68 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico VARIABLE .)
    LOGICAL_NOT     reduce using rule 68 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico VARIABLE .)
    SEMICOLON       reduce using rule 68 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico VARIABLE .)
    RPAREN          reduce using rule 68 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico VARIABLE .)


state 129

    (69) operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .

    LOGICAL_AND     reduce using rule 69 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    LOGICAL_OR      reduce using rule 69 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    LOGICAL_NOT     reduce using rule 69 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    SEMICOLON       reduce using rule 69 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    RPAREN          reduce using rule 69 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)


state 130

    (53) operacionAritmetica -> d_numericos operadorAritmetico d_numericos .
    (53) operacionAritmetica -> d_numericos . operadorAritmetico d_numericos
    (55) operacionAritmetica -> d_numericos . operadorAritmetico VARIABLE
    (57) operacionAritmetica -> d_numericos . operadorAritmetico operacionAritmetica
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD

    SEMICOLON       reduce using rule 53 (operacionAritmetica -> d_numericos operadorAritmetico d_numericos .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89
    MOD             shift and go to state 90

    operadorAritmetico             shift and go to state 101

state 131

    (55) operacionAritmetica -> d_numericos operadorAritmetico VARIABLE .
    (54) operacionAritmetica -> VARIABLE . operadorAritmetico d_numericos
    (56) operacionAritmetica -> VARIABLE . operadorAritmetico VARIABLE
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD

    SEMICOLON       reduce using rule 55 (operacionAritmetica -> d_numericos operadorAritmetico VARIABLE .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89
    MOD             shift and go to state 90

    operadorAritmetico             shift and go to state 85

state 132

    (57) operacionAritmetica -> d_numericos operadorAritmetico operacionAritmetica .

    SEMICOLON       reduce using rule 57 (operacionAritmetica -> d_numericos operadorAritmetico operacionAritmetica .)


state 133

    (58) operacionAritmetica -> error operadorAritmetico error .

    SEMICOLON       reduce using rule 58 (operacionAritmetica -> error operadorAritmetico error .)


state 134

    (97) readline -> READLINE LPAREN RPAREN .

    SEMICOLON       reduce using rule 97 (readline -> READLINE LPAREN RPAREN .)


state 135

    (87) arregloIndexado -> LCOR datos_comma RCOR .

    SEMICOLON       reduce using rule 87 (arregloIndexado -> LCOR datos_comma RCOR .)


state 136

    (84) arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado . NEWLINE RCOR

    NEWLINE         shift and go to state 145


state 137

    (85) cuerpoArregloDeclarado -> datos . ASSIGNATION datos
    (86) cuerpoArregloDeclarado -> datos . ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado

    ASSIGNATION     shift and go to state 146


state 138

    (88) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN . LKEY NEWLINE cuerpoFuncion RKEY

    LKEY            shift and go to state 147


state 139

    (89) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY . NEWLINE cuerpoFuncion RKEY

    NEWLINE         shift and go to state 148


state 140

    (38) argumentosFuncion -> argumentoFuncion argumentosFuncion .

    RPAREN          reduce using rule 38 (argumentosFuncion -> argumentoFuncion argumentosFuncion .)


state 141

    (90) invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .

    NEWLINE         reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    COMMENT1        reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    ECHO            reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    IF              reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    FOR             reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    $end            reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    RETURN          reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    RKEY            reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 90 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)


state 142

    (93) datos_comma -> datos COMMA datos_comma .

    RPAREN          reduce using rule 93 (datos_comma -> datos COMMA datos_comma .)
    RCOR            reduce using rule 93 (datos_comma -> datos COMMA datos_comma .)


state 143

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY . NEWLINE programa RKEY
    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY . NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    NEWLINE         shift and go to state 149


state 144

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico . datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos                          shift and go to state 150
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 145

    (84) arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE . RCOR

    RCOR            shift and go to state 151


state 146

    (85) cuerpoArregloDeclarado -> datos ASSIGNATION . datos
    (86) cuerpoArregloDeclarado -> datos ASSIGNATION . datos COMMA NEWLINE cuerpoArregloDeclarado
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos                          shift and go to state 152
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 147

    (88) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY . NEWLINE cuerpoFuncion RKEY

    NEWLINE         shift and go to state 153


state 148

    (89) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE . cuerpoFuncion RKEY
    (94) cuerpoFuncion -> . programa RETURN expresion SEMICOLON NEWLINE
    (95) cuerpoFuncion -> . programa
    (96) cuerpoFuncion -> . RETURN expresion SEMICOLON NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    RETURN          shift and go to state 156
    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    cuerpoFuncion                  shift and go to state 154
    programa                       shift and go to state 155
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 149

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE . programa RKEY
    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE . programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    programa                       shift and go to state 157
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 150

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos . SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE

    SEMICOLON       shift and go to state 158


state 151

    (84) arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR .

    SEMICOLON       reduce using rule 84 (arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR .)


state 152

    (85) cuerpoArregloDeclarado -> datos ASSIGNATION datos .
    (86) cuerpoArregloDeclarado -> datos ASSIGNATION datos . COMMA NEWLINE cuerpoArregloDeclarado

    NEWLINE         reduce using rule 85 (cuerpoArregloDeclarado -> datos ASSIGNATION datos .)
    COMMA           shift and go to state 159


state 153

    (88) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE . cuerpoFuncion RKEY
    (94) cuerpoFuncion -> . programa RETURN expresion SEMICOLON NEWLINE
    (95) cuerpoFuncion -> . programa
    (96) cuerpoFuncion -> . RETURN expresion SEMICOLON NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    RETURN          shift and go to state 156
    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    cuerpoFuncion                  shift and go to state 160
    programa                       shift and go to state 155
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 154

    (89) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion . RKEY

    RKEY            shift and go to state 161


state 155

    (94) cuerpoFuncion -> programa . RETURN expresion SEMICOLON NEWLINE
    (95) cuerpoFuncion -> programa .

    RETURN          shift and go to state 162
    RKEY            reduce using rule 95 (cuerpoFuncion -> programa .)


state 156

    (96) cuerpoFuncion -> RETURN . expresion SEMICOLON NEWLINE
    (28) expresion -> . argumentos
    (29) expresion -> . invocar
    (30) expresion -> . operacionAritmetica
    (31) expresion -> . operacionRelacional
    (32) expresion -> . readline
    (33) expresion -> . arregloIndexado
    (34) expresion -> . arregloDeclarado
    (35) expresion -> . operacionLogica
    (36) expresion -> . operadorLogico
    (43) argumentos -> . datos COMMA argumentos
    (44) argumentos -> . datos
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (53) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (54) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (55) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (56) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (57) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (58) operacionAritmetica -> . error operadorAritmetico error
    (64) operacionRelacional -> . operacionRelacionalGeneral
    (65) operacionRelacional -> . operacionRelacionalNumerica
    (97) readline -> . READLINE LPAREN RPAREN
    (87) arregloIndexado -> . LCOR datos_comma RCOR
    (84) arregloDeclarado -> . LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (61) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (62) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (63) operacionLogica -> .
    (75) operadorLogico -> . LOGICAL_AND
    (76) operadorLogico -> . LOGICAL_OR
    (77) operadorLogico -> . LOGICAL_NOT
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (66) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (67) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (68) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico VARIABLE
    (69) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (51) d_strings -> . STRING
    (52) d_booleanos -> . BOOLEAN

    FUNCTION_NAME   shift and go to state 18
    VARIABLE        shift and go to state 50
    error           shift and go to state 63
    READLINE        shift and go to state 66
    LCOR            shift and go to state 67
    SEMICOLON       reduce using rule 63 (operacionLogica -> .)
    LOGICAL_AND     shift and go to state 68
    LOGICAL_OR      shift and go to state 69
    LOGICAL_NOT     shift and go to state 70
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 36

    expresion                      shift and go to state 163
    argumentos                     shift and go to state 52
    invocar                        shift and go to state 53
    operacionAritmetica            shift and go to state 54
    operacionRelacional            shift and go to state 55
    readline                       shift and go to state 56
    arregloIndexado                shift and go to state 57
    arregloDeclarado               shift and go to state 58
    operacionLogica                shift and go to state 59
    operadorLogico                 shift and go to state 60
    datos                          shift and go to state 61
    d_numericos                    shift and go to state 62
    operacionRelacionalGeneral     shift and go to state 64
    operacionRelacionalNumerica    shift and go to state 65
    d_strings                      shift and go to state 30
    d_booleanos                    shift and go to state 32

state 157

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa . RKEY
    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa . RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    RKEY            shift and go to state 164


state 158

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON . operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    VARIABLE        shift and go to state 165

    operacionModificadoras         shift and go to state 166

state 159

    (86) cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA . NEWLINE cuerpoArregloDeclarado

    NEWLINE         shift and go to state 167


state 160

    (88) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion . RKEY

    RKEY            shift and go to state 168


state 161

    (89) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .

    NEWLINE         reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    COMMENT1        reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    ECHO            reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    VARIABLE        reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION        reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    IF              reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FOR             reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION_NAME   reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    $end            reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RETURN          reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RKEY            reduce using rule 89 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)


state 162

    (94) cuerpoFuncion -> programa RETURN . expresion SEMICOLON NEWLINE
    (28) expresion -> . argumentos
    (29) expresion -> . invocar
    (30) expresion -> . operacionAritmetica
    (31) expresion -> . operacionRelacional
    (32) expresion -> . readline
    (33) expresion -> . arregloIndexado
    (34) expresion -> . arregloDeclarado
    (35) expresion -> . operacionLogica
    (36) expresion -> . operadorLogico
    (43) argumentos -> . datos COMMA argumentos
    (44) argumentos -> . datos
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (53) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (54) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (55) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (56) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (57) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (58) operacionAritmetica -> . error operadorAritmetico error
    (64) operacionRelacional -> . operacionRelacionalGeneral
    (65) operacionRelacional -> . operacionRelacionalNumerica
    (97) readline -> . READLINE LPAREN RPAREN
    (87) arregloIndexado -> . LCOR datos_comma RCOR
    (84) arregloDeclarado -> . LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (61) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (62) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (63) operacionLogica -> .
    (75) operadorLogico -> . LOGICAL_AND
    (76) operadorLogico -> . LOGICAL_OR
    (77) operadorLogico -> . LOGICAL_NOT
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (66) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (67) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (68) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico VARIABLE
    (69) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (51) d_strings -> . STRING
    (52) d_booleanos -> . BOOLEAN

    FUNCTION_NAME   shift and go to state 18
    VARIABLE        shift and go to state 50
    error           shift and go to state 63
    READLINE        shift and go to state 66
    LCOR            shift and go to state 67
    SEMICOLON       reduce using rule 63 (operacionLogica -> .)
    LOGICAL_AND     shift and go to state 68
    LOGICAL_OR      shift and go to state 69
    LOGICAL_NOT     shift and go to state 70
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 33
    BOOLEAN         shift and go to state 36

    expresion                      shift and go to state 169
    argumentos                     shift and go to state 52
    invocar                        shift and go to state 53
    operacionAritmetica            shift and go to state 54
    operacionRelacional            shift and go to state 55
    readline                       shift and go to state 56
    arregloIndexado                shift and go to state 57
    arregloDeclarado               shift and go to state 58
    operacionLogica                shift and go to state 59
    operadorLogico                 shift and go to state 60
    datos                          shift and go to state 61
    d_numericos                    shift and go to state 62
    operacionRelacionalGeneral     shift and go to state 64
    operacionRelacionalNumerica    shift and go to state 65
    d_strings                      shift and go to state 30
    d_booleanos                    shift and go to state 32

state 163

    (96) cuerpoFuncion -> RETURN expresion . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 170


state 164

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .
    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY . ELSE LKEY NEWLINE programa RKEY NEWLINE

    NEWLINE         reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    COMMENT1        reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    ECHO            reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    VARIABLE        reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    FUNCTION        reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    IF              reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    FOR             reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    FUNCTION_NAME   reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    $end            reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    RETURN          reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    RKEY            reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    ELSE            shift and go to state 171


state 165

    (59) operacionModificadoras -> VARIABLE . INCREMENT
    (60) operacionModificadoras -> VARIABLE . DECREMENT

    INCREMENT       shift and go to state 40
    DECREMENT       shift and go to state 41


state 166

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras . RPAREN LKEY NEWLINE programa RKEY NEWLINE

    RPAREN          shift and go to state 172


state 167

    (86) cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE . cuerpoArregloDeclarado
    (85) cuerpoArregloDeclarado -> . datos ASSIGNATION datos
    (86) cuerpoArregloDeclarado -> . datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado
    (45) datos -> . VARIABLE
    (46) datos -> . d_strings
    (47) datos -> . d_numericos
    (48) datos -> . d_booleanos
    (51) d_strings -> . STRING
    (49) d_numericos -> . NUMBER
    (50) d_numericos -> . FLOAT
    (52) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 29
    STRING          shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    BOOLEAN         shift and go to state 36

    datos                          shift and go to state 137
    cuerpoArregloDeclarado         shift and go to state 173
    d_strings                      shift and go to state 30
    d_numericos                    shift and go to state 31
    d_booleanos                    shift and go to state 32

state 168

    (88) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .

    NEWLINE         reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    COMMENT1        reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    ECHO            reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    VARIABLE        reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION        reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    IF              reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FOR             reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION_NAME   reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    $end            reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RETURN          reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RKEY            reduce using rule 88 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)


state 169

    (94) cuerpoFuncion -> programa RETURN expresion . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 174


state 170

    (96) cuerpoFuncion -> RETURN expresion SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 175


state 171

    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE . LKEY NEWLINE programa RKEY NEWLINE

    LKEY            shift and go to state 176


state 172

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN . LKEY NEWLINE programa RKEY NEWLINE

    LKEY            shift and go to state 177


state 173

    (86) cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado .

    NEWLINE         reduce using rule 86 (cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado .)


state 174

    (94) cuerpoFuncion -> programa RETURN expresion SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 178


state 175

    (96) cuerpoFuncion -> RETURN expresion SEMICOLON NEWLINE .

    RKEY            reduce using rule 96 (cuerpoFuncion -> RETURN expresion SEMICOLON NEWLINE .)


state 176

    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY . NEWLINE programa RKEY NEWLINE

    NEWLINE         shift and go to state 179


state 177

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY . NEWLINE programa RKEY NEWLINE

    NEWLINE         shift and go to state 180


state 178

    (94) cuerpoFuncion -> programa RETURN expresion SEMICOLON NEWLINE .

    RKEY            reduce using rule 94 (cuerpoFuncion -> programa RETURN expresion SEMICOLON NEWLINE .)


state 179

    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE . programa RKEY NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    programa                       shift and go to state 181
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13
    operacionModificadoras         shift and go to state 14

state 180

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE . programa RKEY NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (16) sentencia -> . operacionModificadoras SEMICOLON
    (22) print -> . ECHO datos SEMICOLON
    (23) print -> . ECHO SEMICOLON
    (24) print -> . ECHO argumentos SEMICOLON
    (17) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (21) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (88) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (89) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (26) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (27) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (90) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (91) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (59) operacionModificadoras -> . VARIABLE INCREMENT
    (60) operacionModificadoras -> . VARIABLE DECREMENT

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 15
    VARIABLE        shift and go to state 16
    FUNCTION        shift and go to state 17
    IF              shift and go to state 19
    FOR             shift and go to state 20
    FUNCTION_NAME   shift and go to state 18

    asignacion                     shift and go to state 8
    operacionModificadoras         shift and go to state 14
    programa                       shift and go to state 182
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 181

    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa . RKEY NEWLINE

    RKEY            shift and go to state 183


state 182

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa . RKEY NEWLINE

    RKEY            shift and go to state 184


state 183

    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY . NEWLINE

    NEWLINE         shift and go to state 185


state 184

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY . NEWLINE

    NEWLINE         shift and go to state 186


state 185

    (26) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .

    NEWLINE         reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    COMMENT1        reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    ECHO            reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    VARIABLE        reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION        reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    IF              reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    FOR             reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION_NAME   reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    $end            reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    RETURN          reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    RKEY            reduce using rule 26 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)


state 186

    (27) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .

    NEWLINE         reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    COMMENT1        reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    ECHO            reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    VARIABLE        reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION        reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    IF              reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    FOR             reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION_NAME   reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    $end            reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    RETURN          reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    RKEY            reduce using rule 27 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 4 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 6 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 26 resolved as shift
