Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COUNT
    PERIOD

Grammar

Rule 0     S' -> programa
Rule 1     programa -> bloque
Rule 2     programa -> bloque programa
Rule 3     programa -> comment bloque programa
Rule 4     comment -> COMMENT1
Rule 5     comment -> COMMENT1 NEWLINE
Rule 6     bloque -> sentencia NEWLINE
Rule 7     bloque -> sentencia
Rule 8     bloque -> NEWLINE
Rule 9     sentencia -> print
Rule 10    sentencia -> asignacion
Rule 11    sentencia -> variable
Rule 12    sentencia -> funcion
Rule 13    sentencia -> if
Rule 14    sentencia -> for
Rule 15    sentencia -> invocar
Rule 16    asignacion -> VARIABLE ASSIGN expresion SEMICOLON
Rule 17    variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON
Rule 18    variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON
Rule 19    variable -> VARIABLE ASSIGN_ADD error SEMICOLON
Rule 20    variable -> VARIABLE ASSIGN_SUB error SEMICOLON
Rule 21    print -> ECHO datos SEMICOLON
Rule 22    print -> ECHO SEMICOLON
Rule 23    print -> ECHO argumentos SEMICOLON
Rule 24    if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
Rule 25    if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
Rule 26    for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
Rule 27    expresion -> argumentos
Rule 28    expresion -> invocar
Rule 29    expresion -> operacionAritmetica
Rule 30    expresion -> operacionRelacional
Rule 31    expresion -> readline
Rule 32    expresion -> arregloIndexado
Rule 33    expresion -> arregloDeclarado
Rule 34    expresion -> operacionLogica
Rule 35    expresion -> operadorLogico
Rule 36    argumentos -> datos COMMA argumentos
Rule 37    argumentos -> datos
Rule 38    datos -> VARIABLE
Rule 39    datos -> d_strings
Rule 40    datos -> d_numericos
Rule 41    datos -> d_booleanos
Rule 42    d_numericos -> NUMBER
Rule 43    d_numericos -> FLOAT
Rule 44    d_strings -> STRING
Rule 45    d_booleanos -> BOOLEAN
Rule 46    operacionAritmetica -> d_numericos operadorAritmetico d_numericos
Rule 47    operacionAritmetica -> VARIABLE operadorAritmetico d_numericos
Rule 48    operacionAritmetica -> d_numericos operadorAritmetico VARIABLE
Rule 49    operacionAritmetica -> VARIABLE operadorAritmetico VARIABLE
Rule 50    operacionAritmetica -> d_numericos operadorAritmetico operacionAritmetica
Rule 51    operacionAritmetica -> error operadorAritmetico error
Rule 52    operacionModificadoras -> VARIABLE INCREMENT
Rule 53    operacionModificadoras -> VARIABLE DECREMENT
Rule 54    operacionLogica -> operacionRelacional operadorLogico operacionRelacional
Rule 55    operacionLogica -> operacionRelacional operadorLogico operacionLogica
Rule 56    operacionLogica -> <empty>
Rule 57    operacionRelacional -> operacionRelacionalGeneral
Rule 58    operacionRelacional -> operacionRelacionalNumerica
Rule 59    operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos
Rule 60    operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos
Rule 61    operacionRelacionalNumerica -> datos operadorRelacionalNumerico error
Rule 62    operadorAritmetico -> PLUS
Rule 63    operadorAritmetico -> MINUS
Rule 64    operadorAritmetico -> TIMES
Rule 65    operadorAritmetico -> DIVIDE
Rule 66    operadorAritmetico -> MOD
Rule 67    operadorLogico -> LOGICAL_AND
Rule 68    operadorLogico -> LOGICAL_OR
Rule 69    operadorLogico -> LOGICAL_NOT
Rule 70    operadorRelacionalGeneral -> EQUALS
Rule 71    operadorRelacionalGeneral -> DIFFERENT
Rule 72    operadorRelacionalNumerico -> GREATER
Rule 73    operadorRelacionalNumerico -> LESS
Rule 74    operadorRelacionalNumerico -> GREATER_EQUALS
Rule 75    operadorRelacionalNumerico -> LESS_EQUALS
Rule 76    arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
Rule 77    cuerpoArregloDeclarado -> datos ASSIGNATION datos
Rule 78    cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado
Rule 79    arregloIndexado -> LCOR datos_comma RCOR
Rule 80    funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
Rule 81    funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
Rule 82    invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
Rule 83    invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON
Rule 84    argumentosFuncion -> argumentoFuncion
Rule 85    argumentosFuncion -> argumentoFuncion argumentosFuncion
Rule 86    argumentoFuncion -> VARIABLE
Rule 87    argumentoFuncion -> d_strings
Rule 88    argumentoFuncion -> d_numericos
Rule 89    argumentoFuncion -> d_booleanos
Rule 90    datos_comma -> datos
Rule 91    datos_comma -> datos COMMA datos_comma
Rule 92    cuerpoFuncion -> programa RETURN expresion SEMICOLON NEWLINE
Rule 93    cuerpoFuncion -> programa
Rule 94    cuerpoFuncion -> RETURN expresion SEMICOLON NEWLINE
Rule 95    readline -> READLINE LPAREN RPAREN

Terminals, with rules where they appear

ASSIGN               : 16
ASSIGNATION          : 77 78
ASSIGN_ADD           : 17 19
ASSIGN_SUB           : 18 20
BOOLEAN              : 45
COMMA                : 36 78 91
COMMENT1             : 4 5
COUNT                : 
DECREMENT            : 53
DIFFERENT            : 71
DIVIDE               : 65
ECHO                 : 21 22 23
ELSE                 : 25
EQUALS               : 70
FLOAT                : 43
FOR                  : 26
FUNCTION             : 80 81
FUNCTION_NAME        : 80 81 82 83
GREATER              : 72
GREATER_EQUALS       : 74
IF                   : 24 25
INCREMENT            : 52
LCOR                 : 76 79
LESS                 : 73
LESS_EQUALS          : 75
LKEY                 : 24 25 25 26 80 81
LOGICAL_AND          : 67
LOGICAL_NOT          : 69
LOGICAL_OR           : 68
LPAREN               : 24 25 26 80 81 82 83 95
MINUS                : 63
MOD                  : 66
NEWLINE              : 5 6 8 24 25 25 25 26 26 76 76 78 80 81 92 94
NUMBER               : 42
PERIOD               : 
PLUS                 : 62
RCOR                 : 76 79
READLINE             : 95
RETURN               : 92 94
RKEY                 : 24 25 25 26 80 81
RPAREN               : 24 25 26 80 81 82 83 95
SEMICOLON            : 16 17 18 19 20 21 22 23 26 82 83 92 94
STRING               : 44
TIMES                : 64
VARIABLE             : 16 17 18 19 20 26 38 47 48 49 49 52 53 86
error                : 19 20 51 51 61

Nonterminals, with rules where they appear

argumentoFuncion     : 84 85
argumentos           : 23 27 36
argumentosFuncion    : 80 85
arregloDeclarado     : 33
arregloIndexado      : 32
asignacion           : 10 26
bloque               : 1 2 3
comment              : 3
cuerpoArregloDeclarado : 76 78
cuerpoFuncion        : 80 81
d_booleanos          : 41 89
d_numericos          : 17 18 40 46 46 47 48 50 60 88
d_strings            : 39 87
datos                : 21 26 36 37 59 59 60 61 77 77 78 78 90 91
datos_comma          : 79 82 91
expresion            : 16 92 94
for                  : 14
funcion              : 12
if                   : 13
invocar              : 15 28
operacionAritmetica  : 29 50
operacionLogica      : 34 55
operacionModificadoras : 26
operacionRelacional  : 24 25 30 54 54 55
operacionRelacionalGeneral : 57
operacionRelacionalNumerica : 58
operadorAritmetico   : 46 47 48 49 50 51
operadorLogico       : 35 54 55
operadorRelacionalGeneral : 59
operadorRelacionalNumerico : 26 60 61
print                : 9
programa             : 2 3 24 25 25 26 92 93 0
readline             : 31
sentencia            : 6 7
variable             : 11

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    programa                       shift and go to state 1
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 1

    (0) S' -> programa .



state 2

    (1) programa -> bloque .
    (2) programa -> bloque . programa
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    $end            reduce using rule 1 (programa -> bloque .)
    RETURN          reduce using rule 1 (programa -> bloque .)
    RKEY            reduce using rule 1 (programa -> bloque .)
    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    bloque                         shift and go to state 2
    programa                       shift and go to state 20
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 3

    (3) programa -> comment . bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    NEWLINE         shift and go to state 5
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    bloque                         shift and go to state 21
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 4

    (6) bloque -> sentencia . NEWLINE
    (7) bloque -> sentencia .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 22
    COMMENT1        reduce using rule 7 (bloque -> sentencia .)
    ECHO            reduce using rule 7 (bloque -> sentencia .)
    VARIABLE        reduce using rule 7 (bloque -> sentencia .)
    FUNCTION        reduce using rule 7 (bloque -> sentencia .)
    IF              reduce using rule 7 (bloque -> sentencia .)
    FOR             reduce using rule 7 (bloque -> sentencia .)
    FUNCTION_NAME   reduce using rule 7 (bloque -> sentencia .)
    $end            reduce using rule 7 (bloque -> sentencia .)
    RETURN          reduce using rule 7 (bloque -> sentencia .)
    RKEY            reduce using rule 7 (bloque -> sentencia .)

  ! NEWLINE         [ reduce using rule 7 (bloque -> sentencia .) ]


state 5

    (8) bloque -> NEWLINE .

    NEWLINE         reduce using rule 8 (bloque -> NEWLINE .)
    COMMENT1        reduce using rule 8 (bloque -> NEWLINE .)
    ECHO            reduce using rule 8 (bloque -> NEWLINE .)
    VARIABLE        reduce using rule 8 (bloque -> NEWLINE .)
    FUNCTION        reduce using rule 8 (bloque -> NEWLINE .)
    IF              reduce using rule 8 (bloque -> NEWLINE .)
    FOR             reduce using rule 8 (bloque -> NEWLINE .)
    FUNCTION_NAME   reduce using rule 8 (bloque -> NEWLINE .)
    $end            reduce using rule 8 (bloque -> NEWLINE .)
    RETURN          reduce using rule 8 (bloque -> NEWLINE .)
    RKEY            reduce using rule 8 (bloque -> NEWLINE .)


state 6

    (4) comment -> COMMENT1 .
    (5) comment -> COMMENT1 . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    ECHO            reduce using rule 4 (comment -> COMMENT1 .)
    VARIABLE        reduce using rule 4 (comment -> COMMENT1 .)
    FUNCTION        reduce using rule 4 (comment -> COMMENT1 .)
    IF              reduce using rule 4 (comment -> COMMENT1 .)
    FOR             reduce using rule 4 (comment -> COMMENT1 .)
    FUNCTION_NAME   reduce using rule 4 (comment -> COMMENT1 .)
    NEWLINE         shift and go to state 23

  ! NEWLINE         [ reduce using rule 4 (comment -> COMMENT1 .) ]


state 7

    (9) sentencia -> print .

    NEWLINE         reduce using rule 9 (sentencia -> print .)
    COMMENT1        reduce using rule 9 (sentencia -> print .)
    ECHO            reduce using rule 9 (sentencia -> print .)
    VARIABLE        reduce using rule 9 (sentencia -> print .)
    FUNCTION        reduce using rule 9 (sentencia -> print .)
    IF              reduce using rule 9 (sentencia -> print .)
    FOR             reduce using rule 9 (sentencia -> print .)
    FUNCTION_NAME   reduce using rule 9 (sentencia -> print .)
    $end            reduce using rule 9 (sentencia -> print .)
    RETURN          reduce using rule 9 (sentencia -> print .)
    RKEY            reduce using rule 9 (sentencia -> print .)


state 8

    (10) sentencia -> asignacion .

    NEWLINE         reduce using rule 10 (sentencia -> asignacion .)
    COMMENT1        reduce using rule 10 (sentencia -> asignacion .)
    ECHO            reduce using rule 10 (sentencia -> asignacion .)
    VARIABLE        reduce using rule 10 (sentencia -> asignacion .)
    FUNCTION        reduce using rule 10 (sentencia -> asignacion .)
    IF              reduce using rule 10 (sentencia -> asignacion .)
    FOR             reduce using rule 10 (sentencia -> asignacion .)
    FUNCTION_NAME   reduce using rule 10 (sentencia -> asignacion .)
    $end            reduce using rule 10 (sentencia -> asignacion .)
    RETURN          reduce using rule 10 (sentencia -> asignacion .)
    RKEY            reduce using rule 10 (sentencia -> asignacion .)


state 9

    (11) sentencia -> variable .

    NEWLINE         reduce using rule 11 (sentencia -> variable .)
    COMMENT1        reduce using rule 11 (sentencia -> variable .)
    ECHO            reduce using rule 11 (sentencia -> variable .)
    VARIABLE        reduce using rule 11 (sentencia -> variable .)
    FUNCTION        reduce using rule 11 (sentencia -> variable .)
    IF              reduce using rule 11 (sentencia -> variable .)
    FOR             reduce using rule 11 (sentencia -> variable .)
    FUNCTION_NAME   reduce using rule 11 (sentencia -> variable .)
    $end            reduce using rule 11 (sentencia -> variable .)
    RETURN          reduce using rule 11 (sentencia -> variable .)
    RKEY            reduce using rule 11 (sentencia -> variable .)


state 10

    (12) sentencia -> funcion .

    NEWLINE         reduce using rule 12 (sentencia -> funcion .)
    COMMENT1        reduce using rule 12 (sentencia -> funcion .)
    ECHO            reduce using rule 12 (sentencia -> funcion .)
    VARIABLE        reduce using rule 12 (sentencia -> funcion .)
    FUNCTION        reduce using rule 12 (sentencia -> funcion .)
    IF              reduce using rule 12 (sentencia -> funcion .)
    FOR             reduce using rule 12 (sentencia -> funcion .)
    FUNCTION_NAME   reduce using rule 12 (sentencia -> funcion .)
    $end            reduce using rule 12 (sentencia -> funcion .)
    RETURN          reduce using rule 12 (sentencia -> funcion .)
    RKEY            reduce using rule 12 (sentencia -> funcion .)


state 11

    (13) sentencia -> if .

    NEWLINE         reduce using rule 13 (sentencia -> if .)
    COMMENT1        reduce using rule 13 (sentencia -> if .)
    ECHO            reduce using rule 13 (sentencia -> if .)
    VARIABLE        reduce using rule 13 (sentencia -> if .)
    FUNCTION        reduce using rule 13 (sentencia -> if .)
    IF              reduce using rule 13 (sentencia -> if .)
    FOR             reduce using rule 13 (sentencia -> if .)
    FUNCTION_NAME   reduce using rule 13 (sentencia -> if .)
    $end            reduce using rule 13 (sentencia -> if .)
    RETURN          reduce using rule 13 (sentencia -> if .)
    RKEY            reduce using rule 13 (sentencia -> if .)


state 12

    (14) sentencia -> for .

    NEWLINE         reduce using rule 14 (sentencia -> for .)
    COMMENT1        reduce using rule 14 (sentencia -> for .)
    ECHO            reduce using rule 14 (sentencia -> for .)
    VARIABLE        reduce using rule 14 (sentencia -> for .)
    FUNCTION        reduce using rule 14 (sentencia -> for .)
    IF              reduce using rule 14 (sentencia -> for .)
    FOR             reduce using rule 14 (sentencia -> for .)
    FUNCTION_NAME   reduce using rule 14 (sentencia -> for .)
    $end            reduce using rule 14 (sentencia -> for .)
    RETURN          reduce using rule 14 (sentencia -> for .)
    RKEY            reduce using rule 14 (sentencia -> for .)


state 13

    (15) sentencia -> invocar .

    NEWLINE         reduce using rule 15 (sentencia -> invocar .)
    COMMENT1        reduce using rule 15 (sentencia -> invocar .)
    ECHO            reduce using rule 15 (sentencia -> invocar .)
    VARIABLE        reduce using rule 15 (sentencia -> invocar .)
    FUNCTION        reduce using rule 15 (sentencia -> invocar .)
    IF              reduce using rule 15 (sentencia -> invocar .)
    FOR             reduce using rule 15 (sentencia -> invocar .)
    FUNCTION_NAME   reduce using rule 15 (sentencia -> invocar .)
    $end            reduce using rule 15 (sentencia -> invocar .)
    RETURN          reduce using rule 15 (sentencia -> invocar .)
    RKEY            reduce using rule 15 (sentencia -> invocar .)


state 14

    (21) print -> ECHO . datos SEMICOLON
    (22) print -> ECHO . SEMICOLON
    (23) print -> ECHO . argumentos SEMICOLON
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (36) argumentos -> . datos COMMA argumentos
    (37) argumentos -> . datos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    SEMICOLON       shift and go to state 25
    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos                          shift and go to state 24
    argumentos                     shift and go to state 26
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 15

    (16) asignacion -> VARIABLE . ASSIGN expresion SEMICOLON
    (17) variable -> VARIABLE . ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> VARIABLE . ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> VARIABLE . ASSIGN_ADD error SEMICOLON
    (20) variable -> VARIABLE . ASSIGN_SUB error SEMICOLON

    ASSIGN          shift and go to state 35
    ASSIGN_ADD      shift and go to state 36
    ASSIGN_SUB      shift and go to state 37


state 16

    (80) funcion -> FUNCTION . FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> FUNCTION . FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY

    FUNCTION_NAME   shift and go to state 38


state 17

    (82) invocar -> FUNCTION_NAME . LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> FUNCTION_NAME . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 39


state 18

    (24) if -> IF . LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> IF . LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    LPAREN          shift and go to state 40


state 19

    (26) for -> FOR . LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE

    LPAREN          shift and go to state 41


state 20

    (2) programa -> bloque programa .

    $end            reduce using rule 2 (programa -> bloque programa .)
    RETURN          reduce using rule 2 (programa -> bloque programa .)
    RKEY            reduce using rule 2 (programa -> bloque programa .)


state 21

    (3) programa -> comment bloque . programa
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    comment                        shift and go to state 3
    bloque                         shift and go to state 2
    programa                       shift and go to state 42
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 22

    (6) bloque -> sentencia NEWLINE .

    NEWLINE         reduce using rule 6 (bloque -> sentencia NEWLINE .)
    COMMENT1        reduce using rule 6 (bloque -> sentencia NEWLINE .)
    ECHO            reduce using rule 6 (bloque -> sentencia NEWLINE .)
    VARIABLE        reduce using rule 6 (bloque -> sentencia NEWLINE .)
    FUNCTION        reduce using rule 6 (bloque -> sentencia NEWLINE .)
    IF              reduce using rule 6 (bloque -> sentencia NEWLINE .)
    FOR             reduce using rule 6 (bloque -> sentencia NEWLINE .)
    FUNCTION_NAME   reduce using rule 6 (bloque -> sentencia NEWLINE .)
    $end            reduce using rule 6 (bloque -> sentencia NEWLINE .)
    RETURN          reduce using rule 6 (bloque -> sentencia NEWLINE .)
    RKEY            reduce using rule 6 (bloque -> sentencia NEWLINE .)


state 23

    (5) comment -> COMMENT1 NEWLINE .

    NEWLINE         reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    ECHO            reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    VARIABLE        reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    FUNCTION        reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    IF              reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    FOR             reduce using rule 5 (comment -> COMMENT1 NEWLINE .)
    FUNCTION_NAME   reduce using rule 5 (comment -> COMMENT1 NEWLINE .)


state 24

    (21) print -> ECHO datos . SEMICOLON
    (36) argumentos -> datos . COMMA argumentos
    (37) argumentos -> datos .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 43
    COMMA           shift and go to state 44

  ! SEMICOLON       [ reduce using rule 37 (argumentos -> datos .) ]


state 25

    (22) print -> ECHO SEMICOLON .

    NEWLINE         reduce using rule 22 (print -> ECHO SEMICOLON .)
    COMMENT1        reduce using rule 22 (print -> ECHO SEMICOLON .)
    ECHO            reduce using rule 22 (print -> ECHO SEMICOLON .)
    VARIABLE        reduce using rule 22 (print -> ECHO SEMICOLON .)
    FUNCTION        reduce using rule 22 (print -> ECHO SEMICOLON .)
    IF              reduce using rule 22 (print -> ECHO SEMICOLON .)
    FOR             reduce using rule 22 (print -> ECHO SEMICOLON .)
    FUNCTION_NAME   reduce using rule 22 (print -> ECHO SEMICOLON .)
    $end            reduce using rule 22 (print -> ECHO SEMICOLON .)
    RETURN          reduce using rule 22 (print -> ECHO SEMICOLON .)
    RKEY            reduce using rule 22 (print -> ECHO SEMICOLON .)


state 26

    (23) print -> ECHO argumentos . SEMICOLON

    SEMICOLON       shift and go to state 45


state 27

    (38) datos -> VARIABLE .

    SEMICOLON       reduce using rule 38 (datos -> VARIABLE .)
    COMMA           reduce using rule 38 (datos -> VARIABLE .)
    RPAREN          reduce using rule 38 (datos -> VARIABLE .)
    EQUALS          reduce using rule 38 (datos -> VARIABLE .)
    DIFFERENT       reduce using rule 38 (datos -> VARIABLE .)
    GREATER         reduce using rule 38 (datos -> VARIABLE .)
    LESS            reduce using rule 38 (datos -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 38 (datos -> VARIABLE .)
    LESS_EQUALS     reduce using rule 38 (datos -> VARIABLE .)
    RCOR            reduce using rule 38 (datos -> VARIABLE .)
    LOGICAL_AND     reduce using rule 38 (datos -> VARIABLE .)
    LOGICAL_OR      reduce using rule 38 (datos -> VARIABLE .)
    LOGICAL_NOT     reduce using rule 38 (datos -> VARIABLE .)
    ASSIGNATION     reduce using rule 38 (datos -> VARIABLE .)
    NEWLINE         reduce using rule 38 (datos -> VARIABLE .)


state 28

    (39) datos -> d_strings .

    SEMICOLON       reduce using rule 39 (datos -> d_strings .)
    COMMA           reduce using rule 39 (datos -> d_strings .)
    EQUALS          reduce using rule 39 (datos -> d_strings .)
    DIFFERENT       reduce using rule 39 (datos -> d_strings .)
    GREATER         reduce using rule 39 (datos -> d_strings .)
    LESS            reduce using rule 39 (datos -> d_strings .)
    GREATER_EQUALS  reduce using rule 39 (datos -> d_strings .)
    LESS_EQUALS     reduce using rule 39 (datos -> d_strings .)
    RPAREN          reduce using rule 39 (datos -> d_strings .)
    RCOR            reduce using rule 39 (datos -> d_strings .)
    LOGICAL_AND     reduce using rule 39 (datos -> d_strings .)
    LOGICAL_OR      reduce using rule 39 (datos -> d_strings .)
    LOGICAL_NOT     reduce using rule 39 (datos -> d_strings .)
    ASSIGNATION     reduce using rule 39 (datos -> d_strings .)
    NEWLINE         reduce using rule 39 (datos -> d_strings .)


state 29

    (40) datos -> d_numericos .

    SEMICOLON       reduce using rule 40 (datos -> d_numericos .)
    COMMA           reduce using rule 40 (datos -> d_numericos .)
    RPAREN          reduce using rule 40 (datos -> d_numericos .)
    EQUALS          reduce using rule 40 (datos -> d_numericos .)
    DIFFERENT       reduce using rule 40 (datos -> d_numericos .)
    GREATER         reduce using rule 40 (datos -> d_numericos .)
    LESS            reduce using rule 40 (datos -> d_numericos .)
    GREATER_EQUALS  reduce using rule 40 (datos -> d_numericos .)
    LESS_EQUALS     reduce using rule 40 (datos -> d_numericos .)
    RCOR            reduce using rule 40 (datos -> d_numericos .)
    LOGICAL_AND     reduce using rule 40 (datos -> d_numericos .)
    LOGICAL_OR      reduce using rule 40 (datos -> d_numericos .)
    LOGICAL_NOT     reduce using rule 40 (datos -> d_numericos .)
    ASSIGNATION     reduce using rule 40 (datos -> d_numericos .)
    NEWLINE         reduce using rule 40 (datos -> d_numericos .)


state 30

    (41) datos -> d_booleanos .

    SEMICOLON       reduce using rule 41 (datos -> d_booleanos .)
    COMMA           reduce using rule 41 (datos -> d_booleanos .)
    EQUALS          reduce using rule 41 (datos -> d_booleanos .)
    DIFFERENT       reduce using rule 41 (datos -> d_booleanos .)
    GREATER         reduce using rule 41 (datos -> d_booleanos .)
    LESS            reduce using rule 41 (datos -> d_booleanos .)
    GREATER_EQUALS  reduce using rule 41 (datos -> d_booleanos .)
    LESS_EQUALS     reduce using rule 41 (datos -> d_booleanos .)
    RPAREN          reduce using rule 41 (datos -> d_booleanos .)
    RCOR            reduce using rule 41 (datos -> d_booleanos .)
    LOGICAL_AND     reduce using rule 41 (datos -> d_booleanos .)
    LOGICAL_OR      reduce using rule 41 (datos -> d_booleanos .)
    LOGICAL_NOT     reduce using rule 41 (datos -> d_booleanos .)
    ASSIGNATION     reduce using rule 41 (datos -> d_booleanos .)
    NEWLINE         reduce using rule 41 (datos -> d_booleanos .)


state 31

    (44) d_strings -> STRING .

    SEMICOLON       reduce using rule 44 (d_strings -> STRING .)
    COMMA           reduce using rule 44 (d_strings -> STRING .)
    EQUALS          reduce using rule 44 (d_strings -> STRING .)
    DIFFERENT       reduce using rule 44 (d_strings -> STRING .)
    GREATER         reduce using rule 44 (d_strings -> STRING .)
    LESS            reduce using rule 44 (d_strings -> STRING .)
    GREATER_EQUALS  reduce using rule 44 (d_strings -> STRING .)
    LESS_EQUALS     reduce using rule 44 (d_strings -> STRING .)
    RPAREN          reduce using rule 44 (d_strings -> STRING .)
    RCOR            reduce using rule 44 (d_strings -> STRING .)
    VARIABLE        reduce using rule 44 (d_strings -> STRING .)
    STRING          reduce using rule 44 (d_strings -> STRING .)
    NUMBER          reduce using rule 44 (d_strings -> STRING .)
    FLOAT           reduce using rule 44 (d_strings -> STRING .)
    BOOLEAN         reduce using rule 44 (d_strings -> STRING .)
    LOGICAL_AND     reduce using rule 44 (d_strings -> STRING .)
    LOGICAL_OR      reduce using rule 44 (d_strings -> STRING .)
    LOGICAL_NOT     reduce using rule 44 (d_strings -> STRING .)
    ASSIGNATION     reduce using rule 44 (d_strings -> STRING .)
    NEWLINE         reduce using rule 44 (d_strings -> STRING .)


state 32

    (42) d_numericos -> NUMBER .

    SEMICOLON       reduce using rule 42 (d_numericos -> NUMBER .)
    COMMA           reduce using rule 42 (d_numericos -> NUMBER .)
    PLUS            reduce using rule 42 (d_numericos -> NUMBER .)
    MINUS           reduce using rule 42 (d_numericos -> NUMBER .)
    TIMES           reduce using rule 42 (d_numericos -> NUMBER .)
    DIVIDE          reduce using rule 42 (d_numericos -> NUMBER .)
    MOD             reduce using rule 42 (d_numericos -> NUMBER .)
    EQUALS          reduce using rule 42 (d_numericos -> NUMBER .)
    DIFFERENT       reduce using rule 42 (d_numericos -> NUMBER .)
    GREATER         reduce using rule 42 (d_numericos -> NUMBER .)
    LESS            reduce using rule 42 (d_numericos -> NUMBER .)
    GREATER_EQUALS  reduce using rule 42 (d_numericos -> NUMBER .)
    LESS_EQUALS     reduce using rule 42 (d_numericos -> NUMBER .)
    RPAREN          reduce using rule 42 (d_numericos -> NUMBER .)
    RCOR            reduce using rule 42 (d_numericos -> NUMBER .)
    VARIABLE        reduce using rule 42 (d_numericos -> NUMBER .)
    STRING          reduce using rule 42 (d_numericos -> NUMBER .)
    NUMBER          reduce using rule 42 (d_numericos -> NUMBER .)
    FLOAT           reduce using rule 42 (d_numericos -> NUMBER .)
    BOOLEAN         reduce using rule 42 (d_numericos -> NUMBER .)
    LOGICAL_AND     reduce using rule 42 (d_numericos -> NUMBER .)
    LOGICAL_OR      reduce using rule 42 (d_numericos -> NUMBER .)
    LOGICAL_NOT     reduce using rule 42 (d_numericos -> NUMBER .)
    ASSIGNATION     reduce using rule 42 (d_numericos -> NUMBER .)
    NEWLINE         reduce using rule 42 (d_numericos -> NUMBER .)


state 33

    (43) d_numericos -> FLOAT .

    SEMICOLON       reduce using rule 43 (d_numericos -> FLOAT .)
    COMMA           reduce using rule 43 (d_numericos -> FLOAT .)
    PLUS            reduce using rule 43 (d_numericos -> FLOAT .)
    MINUS           reduce using rule 43 (d_numericos -> FLOAT .)
    TIMES           reduce using rule 43 (d_numericos -> FLOAT .)
    DIVIDE          reduce using rule 43 (d_numericos -> FLOAT .)
    MOD             reduce using rule 43 (d_numericos -> FLOAT .)
    EQUALS          reduce using rule 43 (d_numericos -> FLOAT .)
    DIFFERENT       reduce using rule 43 (d_numericos -> FLOAT .)
    GREATER         reduce using rule 43 (d_numericos -> FLOAT .)
    LESS            reduce using rule 43 (d_numericos -> FLOAT .)
    GREATER_EQUALS  reduce using rule 43 (d_numericos -> FLOAT .)
    LESS_EQUALS     reduce using rule 43 (d_numericos -> FLOAT .)
    RPAREN          reduce using rule 43 (d_numericos -> FLOAT .)
    RCOR            reduce using rule 43 (d_numericos -> FLOAT .)
    VARIABLE        reduce using rule 43 (d_numericos -> FLOAT .)
    STRING          reduce using rule 43 (d_numericos -> FLOAT .)
    NUMBER          reduce using rule 43 (d_numericos -> FLOAT .)
    FLOAT           reduce using rule 43 (d_numericos -> FLOAT .)
    BOOLEAN         reduce using rule 43 (d_numericos -> FLOAT .)
    LOGICAL_AND     reduce using rule 43 (d_numericos -> FLOAT .)
    LOGICAL_OR      reduce using rule 43 (d_numericos -> FLOAT .)
    LOGICAL_NOT     reduce using rule 43 (d_numericos -> FLOAT .)
    ASSIGNATION     reduce using rule 43 (d_numericos -> FLOAT .)
    NEWLINE         reduce using rule 43 (d_numericos -> FLOAT .)


state 34

    (45) d_booleanos -> BOOLEAN .

    SEMICOLON       reduce using rule 45 (d_booleanos -> BOOLEAN .)
    COMMA           reduce using rule 45 (d_booleanos -> BOOLEAN .)
    EQUALS          reduce using rule 45 (d_booleanos -> BOOLEAN .)
    DIFFERENT       reduce using rule 45 (d_booleanos -> BOOLEAN .)
    GREATER         reduce using rule 45 (d_booleanos -> BOOLEAN .)
    LESS            reduce using rule 45 (d_booleanos -> BOOLEAN .)
    GREATER_EQUALS  reduce using rule 45 (d_booleanos -> BOOLEAN .)
    LESS_EQUALS     reduce using rule 45 (d_booleanos -> BOOLEAN .)
    RPAREN          reduce using rule 45 (d_booleanos -> BOOLEAN .)
    RCOR            reduce using rule 45 (d_booleanos -> BOOLEAN .)
    VARIABLE        reduce using rule 45 (d_booleanos -> BOOLEAN .)
    STRING          reduce using rule 45 (d_booleanos -> BOOLEAN .)
    NUMBER          reduce using rule 45 (d_booleanos -> BOOLEAN .)
    FLOAT           reduce using rule 45 (d_booleanos -> BOOLEAN .)
    BOOLEAN         reduce using rule 45 (d_booleanos -> BOOLEAN .)
    LOGICAL_AND     reduce using rule 45 (d_booleanos -> BOOLEAN .)
    LOGICAL_OR      reduce using rule 45 (d_booleanos -> BOOLEAN .)
    LOGICAL_NOT     reduce using rule 45 (d_booleanos -> BOOLEAN .)
    ASSIGNATION     reduce using rule 45 (d_booleanos -> BOOLEAN .)
    NEWLINE         reduce using rule 45 (d_booleanos -> BOOLEAN .)


state 35

    (16) asignacion -> VARIABLE ASSIGN . expresion SEMICOLON
    (27) expresion -> . argumentos
    (28) expresion -> . invocar
    (29) expresion -> . operacionAritmetica
    (30) expresion -> . operacionRelacional
    (31) expresion -> . readline
    (32) expresion -> . arregloIndexado
    (33) expresion -> . arregloDeclarado
    (34) expresion -> . operacionLogica
    (35) expresion -> . operadorLogico
    (36) argumentos -> . datos COMMA argumentos
    (37) argumentos -> . datos
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (46) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (47) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (48) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (49) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (50) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (51) operacionAritmetica -> . error operadorAritmetico error
    (57) operacionRelacional -> . operacionRelacionalGeneral
    (58) operacionRelacional -> . operacionRelacionalNumerica
    (95) readline -> . READLINE LPAREN RPAREN
    (79) arregloIndexado -> . LCOR datos_comma RCOR
    (76) arregloDeclarado -> . LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (54) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (55) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (56) operacionLogica -> .
    (67) operadorLogico -> . LOGICAL_AND
    (68) operadorLogico -> . LOGICAL_OR
    (69) operadorLogico -> . LOGICAL_NOT
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (59) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (60) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (61) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (44) d_strings -> . STRING
    (45) d_booleanos -> . BOOLEAN

    FUNCTION_NAME   shift and go to state 17
    VARIABLE        shift and go to state 46
    error           shift and go to state 59
    READLINE        shift and go to state 62
    LCOR            shift and go to state 63
    SEMICOLON       reduce using rule 56 (operacionLogica -> .)
    LOGICAL_AND     shift and go to state 64
    LOGICAL_OR      shift and go to state 65
    LOGICAL_NOT     shift and go to state 66
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 34

    expresion                      shift and go to state 47
    argumentos                     shift and go to state 48
    invocar                        shift and go to state 49
    operacionAritmetica            shift and go to state 50
    operacionRelacional            shift and go to state 51
    readline                       shift and go to state 52
    arregloIndexado                shift and go to state 53
    arregloDeclarado               shift and go to state 54
    operacionLogica                shift and go to state 55
    operadorLogico                 shift and go to state 56
    datos                          shift and go to state 57
    d_numericos                    shift and go to state 58
    operacionRelacionalGeneral     shift and go to state 60
    operacionRelacionalNumerica    shift and go to state 61
    d_strings                      shift and go to state 28
    d_booleanos                    shift and go to state 30

state 36

    (17) variable -> VARIABLE ASSIGN_ADD . d_numericos SEMICOLON
    (19) variable -> VARIABLE ASSIGN_ADD . error SEMICOLON
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT

    error           shift and go to state 68
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33

    d_numericos                    shift and go to state 67

state 37

    (18) variable -> VARIABLE ASSIGN_SUB . d_numericos SEMICOLON
    (20) variable -> VARIABLE ASSIGN_SUB . error SEMICOLON
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT

    error           shift and go to state 70
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33

    d_numericos                    shift and go to state 69

state 38

    (80) funcion -> FUNCTION FUNCTION_NAME . LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> FUNCTION FUNCTION_NAME . LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY

    LPAREN          shift and go to state 71


state 39

    (82) invocar -> FUNCTION_NAME LPAREN . datos_comma RPAREN SEMICOLON
    (83) invocar -> FUNCTION_NAME LPAREN . RPAREN SEMICOLON
    (90) datos_comma -> . datos
    (91) datos_comma -> . datos COMMA datos_comma
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    RPAREN          shift and go to state 73
    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos_comma                    shift and go to state 72
    datos                          shift and go to state 74
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 40

    (24) if -> IF LPAREN . operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> IF LPAREN . operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (57) operacionRelacional -> . operacionRelacionalGeneral
    (58) operacionRelacional -> . operacionRelacionalNumerica
    (59) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (60) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (61) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    operacionRelacional            shift and go to state 75
    operacionRelacionalGeneral     shift and go to state 60
    operacionRelacionalNumerica    shift and go to state 61
    datos                          shift and go to state 76
    d_numericos                    shift and go to state 29
    d_strings                      shift and go to state 28
    d_booleanos                    shift and go to state 30

state 41

    (26) for -> FOR LPAREN . asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON

    VARIABLE        shift and go to state 78

    asignacion                     shift and go to state 77

state 42

    (3) programa -> comment bloque programa .

    $end            reduce using rule 3 (programa -> comment bloque programa .)
    RETURN          reduce using rule 3 (programa -> comment bloque programa .)
    RKEY            reduce using rule 3 (programa -> comment bloque programa .)


state 43

    (21) print -> ECHO datos SEMICOLON .

    NEWLINE         reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    COMMENT1        reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    ECHO            reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    VARIABLE        reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    FUNCTION        reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    IF              reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    FOR             reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    $end            reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    RETURN          reduce using rule 21 (print -> ECHO datos SEMICOLON .)
    RKEY            reduce using rule 21 (print -> ECHO datos SEMICOLON .)


state 44

    (36) argumentos -> datos COMMA . argumentos
    (36) argumentos -> . datos COMMA argumentos
    (37) argumentos -> . datos
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos                          shift and go to state 79
    argumentos                     shift and go to state 80
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 45

    (23) print -> ECHO argumentos SEMICOLON .

    NEWLINE         reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    COMMENT1        reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    ECHO            reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    VARIABLE        reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    FUNCTION        reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    IF              reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    FOR             reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    $end            reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    RETURN          reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)
    RKEY            reduce using rule 23 (print -> ECHO argumentos SEMICOLON .)


state 46

    (47) operacionAritmetica -> VARIABLE . operadorAritmetico d_numericos
    (49) operacionAritmetica -> VARIABLE . operadorAritmetico VARIABLE
    (38) datos -> VARIABLE .
    (62) operadorAritmetico -> . PLUS
    (63) operadorAritmetico -> . MINUS
    (64) operadorAritmetico -> . TIMES
    (65) operadorAritmetico -> . DIVIDE
    (66) operadorAritmetico -> . MOD

    COMMA           reduce using rule 38 (datos -> VARIABLE .)
    EQUALS          reduce using rule 38 (datos -> VARIABLE .)
    DIFFERENT       reduce using rule 38 (datos -> VARIABLE .)
    GREATER         reduce using rule 38 (datos -> VARIABLE .)
    LESS            reduce using rule 38 (datos -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 38 (datos -> VARIABLE .)
    LESS_EQUALS     reduce using rule 38 (datos -> VARIABLE .)
    SEMICOLON       reduce using rule 38 (datos -> VARIABLE .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86

    operadorAritmetico             shift and go to state 81

state 47

    (16) asignacion -> VARIABLE ASSIGN expresion . SEMICOLON

    SEMICOLON       shift and go to state 87


state 48

    (27) expresion -> argumentos .

    SEMICOLON       reduce using rule 27 (expresion -> argumentos .)


state 49

    (28) expresion -> invocar .

    SEMICOLON       reduce using rule 28 (expresion -> invocar .)


state 50

    (29) expresion -> operacionAritmetica .

    SEMICOLON       reduce using rule 29 (expresion -> operacionAritmetica .)


state 51

    (30) expresion -> operacionRelacional .
    (54) operacionLogica -> operacionRelacional . operadorLogico operacionRelacional
    (55) operacionLogica -> operacionRelacional . operadorLogico operacionLogica
    (67) operadorLogico -> . LOGICAL_AND
    (68) operadorLogico -> . LOGICAL_OR
    (69) operadorLogico -> . LOGICAL_NOT

    SEMICOLON       reduce using rule 30 (expresion -> operacionRelacional .)
    LOGICAL_AND     shift and go to state 64
    LOGICAL_OR      shift and go to state 65
    LOGICAL_NOT     shift and go to state 66

    operadorLogico                 shift and go to state 88

state 52

    (31) expresion -> readline .

    SEMICOLON       reduce using rule 31 (expresion -> readline .)


state 53

    (32) expresion -> arregloIndexado .

    SEMICOLON       reduce using rule 32 (expresion -> arregloIndexado .)


state 54

    (33) expresion -> arregloDeclarado .

    SEMICOLON       reduce using rule 33 (expresion -> arregloDeclarado .)


state 55

    (34) expresion -> operacionLogica .

    SEMICOLON       reduce using rule 34 (expresion -> operacionLogica .)


state 56

    (35) expresion -> operadorLogico .

    SEMICOLON       reduce using rule 35 (expresion -> operadorLogico .)


state 57

    (36) argumentos -> datos . COMMA argumentos
    (37) argumentos -> datos .
    (59) operacionRelacionalGeneral -> datos . operadorRelacionalGeneral datos
    (60) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico d_numericos
    (61) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico error
    (70) operadorRelacionalGeneral -> . EQUALS
    (71) operadorRelacionalGeneral -> . DIFFERENT
    (72) operadorRelacionalNumerico -> . GREATER
    (73) operadorRelacionalNumerico -> . LESS
    (74) operadorRelacionalNumerico -> . GREATER_EQUALS
    (75) operadorRelacionalNumerico -> . LESS_EQUALS

    COMMA           shift and go to state 44
    SEMICOLON       reduce using rule 37 (argumentos -> datos .)
    EQUALS          shift and go to state 91
    DIFFERENT       shift and go to state 92
    GREATER         shift and go to state 93
    LESS            shift and go to state 94
    GREATER_EQUALS  shift and go to state 95
    LESS_EQUALS     shift and go to state 96

    operadorRelacionalGeneral      shift and go to state 89
    operadorRelacionalNumerico     shift and go to state 90

state 58

    (46) operacionAritmetica -> d_numericos . operadorAritmetico d_numericos
    (48) operacionAritmetica -> d_numericos . operadorAritmetico VARIABLE
    (50) operacionAritmetica -> d_numericos . operadorAritmetico operacionAritmetica
    (40) datos -> d_numericos .
    (62) operadorAritmetico -> . PLUS
    (63) operadorAritmetico -> . MINUS
    (64) operadorAritmetico -> . TIMES
    (65) operadorAritmetico -> . DIVIDE
    (66) operadorAritmetico -> . MOD

    COMMA           reduce using rule 40 (datos -> d_numericos .)
    EQUALS          reduce using rule 40 (datos -> d_numericos .)
    DIFFERENT       reduce using rule 40 (datos -> d_numericos .)
    GREATER         reduce using rule 40 (datos -> d_numericos .)
    LESS            reduce using rule 40 (datos -> d_numericos .)
    GREATER_EQUALS  reduce using rule 40 (datos -> d_numericos .)
    LESS_EQUALS     reduce using rule 40 (datos -> d_numericos .)
    SEMICOLON       reduce using rule 40 (datos -> d_numericos .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86

    operadorAritmetico             shift and go to state 97

state 59

    (51) operacionAritmetica -> error . operadorAritmetico error
    (62) operadorAritmetico -> . PLUS
    (63) operadorAritmetico -> . MINUS
    (64) operadorAritmetico -> . TIMES
    (65) operadorAritmetico -> . DIVIDE
    (66) operadorAritmetico -> . MOD

    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86

    operadorAritmetico             shift and go to state 98

state 60

    (57) operacionRelacional -> operacionRelacionalGeneral .

    LOGICAL_AND     reduce using rule 57 (operacionRelacional -> operacionRelacionalGeneral .)
    LOGICAL_OR      reduce using rule 57 (operacionRelacional -> operacionRelacionalGeneral .)
    LOGICAL_NOT     reduce using rule 57 (operacionRelacional -> operacionRelacionalGeneral .)
    SEMICOLON       reduce using rule 57 (operacionRelacional -> operacionRelacionalGeneral .)
    RPAREN          reduce using rule 57 (operacionRelacional -> operacionRelacionalGeneral .)


state 61

    (58) operacionRelacional -> operacionRelacionalNumerica .

    LOGICAL_AND     reduce using rule 58 (operacionRelacional -> operacionRelacionalNumerica .)
    LOGICAL_OR      reduce using rule 58 (operacionRelacional -> operacionRelacionalNumerica .)
    LOGICAL_NOT     reduce using rule 58 (operacionRelacional -> operacionRelacionalNumerica .)
    SEMICOLON       reduce using rule 58 (operacionRelacional -> operacionRelacionalNumerica .)
    RPAREN          reduce using rule 58 (operacionRelacional -> operacionRelacionalNumerica .)


state 62

    (95) readline -> READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 99


state 63

    (79) arregloIndexado -> LCOR . datos_comma RCOR
    (76) arregloDeclarado -> LCOR . NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (90) datos_comma -> . datos
    (91) datos_comma -> . datos COMMA datos_comma
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    NEWLINE         shift and go to state 101
    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos_comma                    shift and go to state 100
    datos                          shift and go to state 74
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 64

    (67) operadorLogico -> LOGICAL_AND .

    SEMICOLON       reduce using rule 67 (operadorLogico -> LOGICAL_AND .)
    VARIABLE        reduce using rule 67 (operadorLogico -> LOGICAL_AND .)
    STRING          reduce using rule 67 (operadorLogico -> LOGICAL_AND .)
    NUMBER          reduce using rule 67 (operadorLogico -> LOGICAL_AND .)
    FLOAT           reduce using rule 67 (operadorLogico -> LOGICAL_AND .)
    BOOLEAN         reduce using rule 67 (operadorLogico -> LOGICAL_AND .)


state 65

    (68) operadorLogico -> LOGICAL_OR .

    SEMICOLON       reduce using rule 68 (operadorLogico -> LOGICAL_OR .)
    VARIABLE        reduce using rule 68 (operadorLogico -> LOGICAL_OR .)
    STRING          reduce using rule 68 (operadorLogico -> LOGICAL_OR .)
    NUMBER          reduce using rule 68 (operadorLogico -> LOGICAL_OR .)
    FLOAT           reduce using rule 68 (operadorLogico -> LOGICAL_OR .)
    BOOLEAN         reduce using rule 68 (operadorLogico -> LOGICAL_OR .)


state 66

    (69) operadorLogico -> LOGICAL_NOT .

    SEMICOLON       reduce using rule 69 (operadorLogico -> LOGICAL_NOT .)
    VARIABLE        reduce using rule 69 (operadorLogico -> LOGICAL_NOT .)
    STRING          reduce using rule 69 (operadorLogico -> LOGICAL_NOT .)
    NUMBER          reduce using rule 69 (operadorLogico -> LOGICAL_NOT .)
    FLOAT           reduce using rule 69 (operadorLogico -> LOGICAL_NOT .)
    BOOLEAN         reduce using rule 69 (operadorLogico -> LOGICAL_NOT .)


state 67

    (17) variable -> VARIABLE ASSIGN_ADD d_numericos . SEMICOLON

    SEMICOLON       shift and go to state 102


state 68

    (19) variable -> VARIABLE ASSIGN_ADD error . SEMICOLON

    SEMICOLON       shift and go to state 103


state 69

    (18) variable -> VARIABLE ASSIGN_SUB d_numericos . SEMICOLON

    SEMICOLON       shift and go to state 104


state 70

    (20) variable -> VARIABLE ASSIGN_SUB error . SEMICOLON

    SEMICOLON       shift and go to state 105


state 71

    (80) funcion -> FUNCTION FUNCTION_NAME LPAREN . argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> FUNCTION FUNCTION_NAME LPAREN . RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (84) argumentosFuncion -> . argumentoFuncion
    (85) argumentosFuncion -> . argumentoFuncion argumentosFuncion
    (86) argumentoFuncion -> . VARIABLE
    (87) argumentoFuncion -> . d_strings
    (88) argumentoFuncion -> . d_numericos
    (89) argumentoFuncion -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    RPAREN          shift and go to state 107
    VARIABLE        shift and go to state 109
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    argumentosFuncion              shift and go to state 106
    argumentoFuncion               shift and go to state 108
    d_strings                      shift and go to state 110
    d_numericos                    shift and go to state 111
    d_booleanos                    shift and go to state 112

state 72

    (82) invocar -> FUNCTION_NAME LPAREN datos_comma . RPAREN SEMICOLON

    RPAREN          shift and go to state 113


state 73

    (83) invocar -> FUNCTION_NAME LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 114


state 74

    (90) datos_comma -> datos .
    (91) datos_comma -> datos . COMMA datos_comma

    RPAREN          reduce using rule 90 (datos_comma -> datos .)
    RCOR            reduce using rule 90 (datos_comma -> datos .)
    COMMA           shift and go to state 115


state 75

    (24) if -> IF LPAREN operacionRelacional . RPAREN LKEY NEWLINE programa RKEY
    (25) if -> IF LPAREN operacionRelacional . RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    RPAREN          shift and go to state 116


state 76

    (59) operacionRelacionalGeneral -> datos . operadorRelacionalGeneral datos
    (60) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico d_numericos
    (61) operacionRelacionalNumerica -> datos . operadorRelacionalNumerico error
    (70) operadorRelacionalGeneral -> . EQUALS
    (71) operadorRelacionalGeneral -> . DIFFERENT
    (72) operadorRelacionalNumerico -> . GREATER
    (73) operadorRelacionalNumerico -> . LESS
    (74) operadorRelacionalNumerico -> . GREATER_EQUALS
    (75) operadorRelacionalNumerico -> . LESS_EQUALS

    EQUALS          shift and go to state 91
    DIFFERENT       shift and go to state 92
    GREATER         shift and go to state 93
    LESS            shift and go to state 94
    GREATER_EQUALS  shift and go to state 95
    LESS_EQUALS     shift and go to state 96

    operadorRelacionalGeneral      shift and go to state 89
    operadorRelacionalNumerico     shift and go to state 90

state 77

    (26) for -> FOR LPAREN asignacion . VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE

    VARIABLE        shift and go to state 117


state 78

    (16) asignacion -> VARIABLE . ASSIGN expresion SEMICOLON

    ASSIGN          shift and go to state 35


state 79

    (36) argumentos -> datos . COMMA argumentos
    (37) argumentos -> datos .

    COMMA           shift and go to state 44
    SEMICOLON       reduce using rule 37 (argumentos -> datos .)


state 80

    (36) argumentos -> datos COMMA argumentos .

    SEMICOLON       reduce using rule 36 (argumentos -> datos COMMA argumentos .)


state 81

    (47) operacionAritmetica -> VARIABLE operadorAritmetico . d_numericos
    (49) operacionAritmetica -> VARIABLE operadorAritmetico . VARIABLE
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT

    VARIABLE        shift and go to state 118
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33

    d_numericos                    shift and go to state 119

state 82

    (62) operadorAritmetico -> PLUS .

    VARIABLE        reduce using rule 62 (operadorAritmetico -> PLUS .)
    NUMBER          reduce using rule 62 (operadorAritmetico -> PLUS .)
    FLOAT           reduce using rule 62 (operadorAritmetico -> PLUS .)
    error           reduce using rule 62 (operadorAritmetico -> PLUS .)


state 83

    (63) operadorAritmetico -> MINUS .

    VARIABLE        reduce using rule 63 (operadorAritmetico -> MINUS .)
    NUMBER          reduce using rule 63 (operadorAritmetico -> MINUS .)
    FLOAT           reduce using rule 63 (operadorAritmetico -> MINUS .)
    error           reduce using rule 63 (operadorAritmetico -> MINUS .)


state 84

    (64) operadorAritmetico -> TIMES .

    VARIABLE        reduce using rule 64 (operadorAritmetico -> TIMES .)
    NUMBER          reduce using rule 64 (operadorAritmetico -> TIMES .)
    FLOAT           reduce using rule 64 (operadorAritmetico -> TIMES .)
    error           reduce using rule 64 (operadorAritmetico -> TIMES .)


state 85

    (65) operadorAritmetico -> DIVIDE .

    VARIABLE        reduce using rule 65 (operadorAritmetico -> DIVIDE .)
    NUMBER          reduce using rule 65 (operadorAritmetico -> DIVIDE .)
    FLOAT           reduce using rule 65 (operadorAritmetico -> DIVIDE .)
    error           reduce using rule 65 (operadorAritmetico -> DIVIDE .)


state 86

    (66) operadorAritmetico -> MOD .

    VARIABLE        reduce using rule 66 (operadorAritmetico -> MOD .)
    NUMBER          reduce using rule 66 (operadorAritmetico -> MOD .)
    FLOAT           reduce using rule 66 (operadorAritmetico -> MOD .)
    error           reduce using rule 66 (operadorAritmetico -> MOD .)


state 87

    (16) asignacion -> VARIABLE ASSIGN expresion SEMICOLON .

    NEWLINE         reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    COMMENT1        reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    ECHO            reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    VARIABLE        reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    FUNCTION        reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    IF              reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    FOR             reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    FUNCTION_NAME   reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    $end            reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    RETURN          reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)
    RKEY            reduce using rule 16 (asignacion -> VARIABLE ASSIGN expresion SEMICOLON .)


state 88

    (54) operacionLogica -> operacionRelacional operadorLogico . operacionRelacional
    (55) operacionLogica -> operacionRelacional operadorLogico . operacionLogica
    (57) operacionRelacional -> . operacionRelacionalGeneral
    (58) operacionRelacional -> . operacionRelacionalNumerica
    (54) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (55) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (56) operacionLogica -> .
    (59) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (60) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (61) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    SEMICOLON       reduce using rule 56 (operacionLogica -> .)
    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    operacionRelacional            shift and go to state 120
    operacionLogica                shift and go to state 121
    operacionRelacionalGeneral     shift and go to state 60
    operacionRelacionalNumerica    shift and go to state 61
    datos                          shift and go to state 76
    d_numericos                    shift and go to state 29
    d_strings                      shift and go to state 28
    d_booleanos                    shift and go to state 30

state 89

    (59) operacionRelacionalGeneral -> datos operadorRelacionalGeneral . datos
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos                          shift and go to state 122
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 90

    (60) operacionRelacionalNumerica -> datos operadorRelacionalNumerico . d_numericos
    (61) operacionRelacionalNumerica -> datos operadorRelacionalNumerico . error
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT

    error           shift and go to state 124
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33

    d_numericos                    shift and go to state 123

state 91

    (70) operadorRelacionalGeneral -> EQUALS .

    VARIABLE        reduce using rule 70 (operadorRelacionalGeneral -> EQUALS .)
    STRING          reduce using rule 70 (operadorRelacionalGeneral -> EQUALS .)
    NUMBER          reduce using rule 70 (operadorRelacionalGeneral -> EQUALS .)
    FLOAT           reduce using rule 70 (operadorRelacionalGeneral -> EQUALS .)
    BOOLEAN         reduce using rule 70 (operadorRelacionalGeneral -> EQUALS .)


state 92

    (71) operadorRelacionalGeneral -> DIFFERENT .

    VARIABLE        reduce using rule 71 (operadorRelacionalGeneral -> DIFFERENT .)
    STRING          reduce using rule 71 (operadorRelacionalGeneral -> DIFFERENT .)
    NUMBER          reduce using rule 71 (operadorRelacionalGeneral -> DIFFERENT .)
    FLOAT           reduce using rule 71 (operadorRelacionalGeneral -> DIFFERENT .)
    BOOLEAN         reduce using rule 71 (operadorRelacionalGeneral -> DIFFERENT .)


state 93

    (72) operadorRelacionalNumerico -> GREATER .

    error           reduce using rule 72 (operadorRelacionalNumerico -> GREATER .)
    NUMBER          reduce using rule 72 (operadorRelacionalNumerico -> GREATER .)
    FLOAT           reduce using rule 72 (operadorRelacionalNumerico -> GREATER .)
    VARIABLE        reduce using rule 72 (operadorRelacionalNumerico -> GREATER .)
    STRING          reduce using rule 72 (operadorRelacionalNumerico -> GREATER .)
    BOOLEAN         reduce using rule 72 (operadorRelacionalNumerico -> GREATER .)


state 94

    (73) operadorRelacionalNumerico -> LESS .

    error           reduce using rule 73 (operadorRelacionalNumerico -> LESS .)
    NUMBER          reduce using rule 73 (operadorRelacionalNumerico -> LESS .)
    FLOAT           reduce using rule 73 (operadorRelacionalNumerico -> LESS .)
    VARIABLE        reduce using rule 73 (operadorRelacionalNumerico -> LESS .)
    STRING          reduce using rule 73 (operadorRelacionalNumerico -> LESS .)
    BOOLEAN         reduce using rule 73 (operadorRelacionalNumerico -> LESS .)


state 95

    (74) operadorRelacionalNumerico -> GREATER_EQUALS .

    error           reduce using rule 74 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    NUMBER          reduce using rule 74 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    FLOAT           reduce using rule 74 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    VARIABLE        reduce using rule 74 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    STRING          reduce using rule 74 (operadorRelacionalNumerico -> GREATER_EQUALS .)
    BOOLEAN         reduce using rule 74 (operadorRelacionalNumerico -> GREATER_EQUALS .)


state 96

    (75) operadorRelacionalNumerico -> LESS_EQUALS .

    error           reduce using rule 75 (operadorRelacionalNumerico -> LESS_EQUALS .)
    NUMBER          reduce using rule 75 (operadorRelacionalNumerico -> LESS_EQUALS .)
    FLOAT           reduce using rule 75 (operadorRelacionalNumerico -> LESS_EQUALS .)
    VARIABLE        reduce using rule 75 (operadorRelacionalNumerico -> LESS_EQUALS .)
    STRING          reduce using rule 75 (operadorRelacionalNumerico -> LESS_EQUALS .)
    BOOLEAN         reduce using rule 75 (operadorRelacionalNumerico -> LESS_EQUALS .)


state 97

    (46) operacionAritmetica -> d_numericos operadorAritmetico . d_numericos
    (48) operacionAritmetica -> d_numericos operadorAritmetico . VARIABLE
    (50) operacionAritmetica -> d_numericos operadorAritmetico . operacionAritmetica
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (46) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (47) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (48) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (49) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (50) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (51) operacionAritmetica -> . error operadorAritmetico error

    VARIABLE        shift and go to state 126
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    error           shift and go to state 59

    d_numericos                    shift and go to state 125
    operacionAritmetica            shift and go to state 127

state 98

    (51) operacionAritmetica -> error operadorAritmetico . error

    error           shift and go to state 128


state 99

    (95) readline -> READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 129


state 100

    (79) arregloIndexado -> LCOR datos_comma . RCOR

    RCOR            shift and go to state 130


state 101

    (76) arregloDeclarado -> LCOR NEWLINE . cuerpoArregloDeclarado NEWLINE RCOR
    (77) cuerpoArregloDeclarado -> . datos ASSIGNATION datos
    (78) cuerpoArregloDeclarado -> . datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    cuerpoArregloDeclarado         shift and go to state 131
    datos                          shift and go to state 132
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 102

    (17) variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .

    NEWLINE         reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    COMMENT1        reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    ECHO            reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    VARIABLE        reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    FUNCTION        reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    IF              reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    FOR             reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    $end            reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    RETURN          reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)
    RKEY            reduce using rule 17 (variable -> VARIABLE ASSIGN_ADD d_numericos SEMICOLON .)


state 103

    (19) variable -> VARIABLE ASSIGN_ADD error SEMICOLON .

    NEWLINE         reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    COMMENT1        reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    ECHO            reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    VARIABLE        reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    FUNCTION        reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    IF              reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    FOR             reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    FUNCTION_NAME   reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    $end            reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    RETURN          reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)
    RKEY            reduce using rule 19 (variable -> VARIABLE ASSIGN_ADD error SEMICOLON .)


state 104

    (18) variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .

    NEWLINE         reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    COMMENT1        reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    ECHO            reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    VARIABLE        reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    FUNCTION        reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    IF              reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    FOR             reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    FUNCTION_NAME   reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    $end            reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    RETURN          reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)
    RKEY            reduce using rule 18 (variable -> VARIABLE ASSIGN_SUB d_numericos SEMICOLON .)


state 105

    (20) variable -> VARIABLE ASSIGN_SUB error SEMICOLON .

    NEWLINE         reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    COMMENT1        reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    ECHO            reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    VARIABLE        reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    FUNCTION        reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    IF              reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    FOR             reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    FUNCTION_NAME   reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    $end            reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    RETURN          reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)
    RKEY            reduce using rule 20 (variable -> VARIABLE ASSIGN_SUB error SEMICOLON .)


state 106

    (80) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion . RPAREN LKEY NEWLINE cuerpoFuncion RKEY

    RPAREN          shift and go to state 133


state 107

    (81) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN . LKEY NEWLINE cuerpoFuncion RKEY

    LKEY            shift and go to state 134


state 108

    (84) argumentosFuncion -> argumentoFuncion .
    (85) argumentosFuncion -> argumentoFuncion . argumentosFuncion
    (84) argumentosFuncion -> . argumentoFuncion
    (85) argumentosFuncion -> . argumentoFuncion argumentosFuncion
    (86) argumentoFuncion -> . VARIABLE
    (87) argumentoFuncion -> . d_strings
    (88) argumentoFuncion -> . d_numericos
    (89) argumentoFuncion -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    RPAREN          reduce using rule 84 (argumentosFuncion -> argumentoFuncion .)
    VARIABLE        shift and go to state 109
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    argumentoFuncion               shift and go to state 108
    argumentosFuncion              shift and go to state 135
    d_strings                      shift and go to state 110
    d_numericos                    shift and go to state 111
    d_booleanos                    shift and go to state 112

state 109

    (86) argumentoFuncion -> VARIABLE .

    VARIABLE        reduce using rule 86 (argumentoFuncion -> VARIABLE .)
    STRING          reduce using rule 86 (argumentoFuncion -> VARIABLE .)
    NUMBER          reduce using rule 86 (argumentoFuncion -> VARIABLE .)
    FLOAT           reduce using rule 86 (argumentoFuncion -> VARIABLE .)
    BOOLEAN         reduce using rule 86 (argumentoFuncion -> VARIABLE .)
    RPAREN          reduce using rule 86 (argumentoFuncion -> VARIABLE .)


state 110

    (87) argumentoFuncion -> d_strings .

    VARIABLE        reduce using rule 87 (argumentoFuncion -> d_strings .)
    STRING          reduce using rule 87 (argumentoFuncion -> d_strings .)
    NUMBER          reduce using rule 87 (argumentoFuncion -> d_strings .)
    FLOAT           reduce using rule 87 (argumentoFuncion -> d_strings .)
    BOOLEAN         reduce using rule 87 (argumentoFuncion -> d_strings .)
    RPAREN          reduce using rule 87 (argumentoFuncion -> d_strings .)


state 111

    (88) argumentoFuncion -> d_numericos .

    VARIABLE        reduce using rule 88 (argumentoFuncion -> d_numericos .)
    STRING          reduce using rule 88 (argumentoFuncion -> d_numericos .)
    NUMBER          reduce using rule 88 (argumentoFuncion -> d_numericos .)
    FLOAT           reduce using rule 88 (argumentoFuncion -> d_numericos .)
    BOOLEAN         reduce using rule 88 (argumentoFuncion -> d_numericos .)
    RPAREN          reduce using rule 88 (argumentoFuncion -> d_numericos .)


state 112

    (89) argumentoFuncion -> d_booleanos .

    VARIABLE        reduce using rule 89 (argumentoFuncion -> d_booleanos .)
    STRING          reduce using rule 89 (argumentoFuncion -> d_booleanos .)
    NUMBER          reduce using rule 89 (argumentoFuncion -> d_booleanos .)
    FLOAT           reduce using rule 89 (argumentoFuncion -> d_booleanos .)
    BOOLEAN         reduce using rule 89 (argumentoFuncion -> d_booleanos .)
    RPAREN          reduce using rule 89 (argumentoFuncion -> d_booleanos .)


state 113

    (82) invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 136


state 114

    (83) invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .

    NEWLINE         reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    COMMENT1        reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    RKEY            reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 83 (invocar -> FUNCTION_NAME LPAREN RPAREN SEMICOLON .)


state 115

    (91) datos_comma -> datos COMMA . datos_comma
    (90) datos_comma -> . datos
    (91) datos_comma -> . datos COMMA datos_comma
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos                          shift and go to state 74
    datos_comma                    shift and go to state 137
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 116

    (24) if -> IF LPAREN operacionRelacional RPAREN . LKEY NEWLINE programa RKEY
    (25) if -> IF LPAREN operacionRelacional RPAREN . LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    LKEY            shift and go to state 138


state 117

    (26) for -> FOR LPAREN asignacion VARIABLE . operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (72) operadorRelacionalNumerico -> . GREATER
    (73) operadorRelacionalNumerico -> . LESS
    (74) operadorRelacionalNumerico -> . GREATER_EQUALS
    (75) operadorRelacionalNumerico -> . LESS_EQUALS

    GREATER         shift and go to state 93
    LESS            shift and go to state 94
    GREATER_EQUALS  shift and go to state 95
    LESS_EQUALS     shift and go to state 96

    operadorRelacionalNumerico     shift and go to state 139

state 118

    (49) operacionAritmetica -> VARIABLE operadorAritmetico VARIABLE .

    SEMICOLON       reduce using rule 49 (operacionAritmetica -> VARIABLE operadorAritmetico VARIABLE .)


state 119

    (47) operacionAritmetica -> VARIABLE operadorAritmetico d_numericos .

    SEMICOLON       reduce using rule 47 (operacionAritmetica -> VARIABLE operadorAritmetico d_numericos .)


state 120

    (54) operacionLogica -> operacionRelacional operadorLogico operacionRelacional .
    (54) operacionLogica -> operacionRelacional . operadorLogico operacionRelacional
    (55) operacionLogica -> operacionRelacional . operadorLogico operacionLogica
    (67) operadorLogico -> . LOGICAL_AND
    (68) operadorLogico -> . LOGICAL_OR
    (69) operadorLogico -> . LOGICAL_NOT

    SEMICOLON       reduce using rule 54 (operacionLogica -> operacionRelacional operadorLogico operacionRelacional .)
    LOGICAL_AND     shift and go to state 64
    LOGICAL_OR      shift and go to state 65
    LOGICAL_NOT     shift and go to state 66

    operadorLogico                 shift and go to state 88

state 121

    (55) operacionLogica -> operacionRelacional operadorLogico operacionLogica .

    SEMICOLON       reduce using rule 55 (operacionLogica -> operacionRelacional operadorLogico operacionLogica .)


state 122

    (59) operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .

    LOGICAL_AND     reduce using rule 59 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    LOGICAL_OR      reduce using rule 59 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    LOGICAL_NOT     reduce using rule 59 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    SEMICOLON       reduce using rule 59 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)
    RPAREN          reduce using rule 59 (operacionRelacionalGeneral -> datos operadorRelacionalGeneral datos .)


state 123

    (60) operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .

    LOGICAL_AND     reduce using rule 60 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    LOGICAL_OR      reduce using rule 60 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    LOGICAL_NOT     reduce using rule 60 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    SEMICOLON       reduce using rule 60 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)
    RPAREN          reduce using rule 60 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico d_numericos .)


state 124

    (61) operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .

    LOGICAL_AND     reduce using rule 61 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    LOGICAL_OR      reduce using rule 61 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    LOGICAL_NOT     reduce using rule 61 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    SEMICOLON       reduce using rule 61 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)
    RPAREN          reduce using rule 61 (operacionRelacionalNumerica -> datos operadorRelacionalNumerico error .)


state 125

    (46) operacionAritmetica -> d_numericos operadorAritmetico d_numericos .
    (46) operacionAritmetica -> d_numericos . operadorAritmetico d_numericos
    (48) operacionAritmetica -> d_numericos . operadorAritmetico VARIABLE
    (50) operacionAritmetica -> d_numericos . operadorAritmetico operacionAritmetica
    (62) operadorAritmetico -> . PLUS
    (63) operadorAritmetico -> . MINUS
    (64) operadorAritmetico -> . TIMES
    (65) operadorAritmetico -> . DIVIDE
    (66) operadorAritmetico -> . MOD

    SEMICOLON       reduce using rule 46 (operacionAritmetica -> d_numericos operadorAritmetico d_numericos .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86

    operadorAritmetico             shift and go to state 97

state 126

    (48) operacionAritmetica -> d_numericos operadorAritmetico VARIABLE .
    (47) operacionAritmetica -> VARIABLE . operadorAritmetico d_numericos
    (49) operacionAritmetica -> VARIABLE . operadorAritmetico VARIABLE
    (62) operadorAritmetico -> . PLUS
    (63) operadorAritmetico -> . MINUS
    (64) operadorAritmetico -> . TIMES
    (65) operadorAritmetico -> . DIVIDE
    (66) operadorAritmetico -> . MOD

    SEMICOLON       reduce using rule 48 (operacionAritmetica -> d_numericos operadorAritmetico VARIABLE .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86

    operadorAritmetico             shift and go to state 81

state 127

    (50) operacionAritmetica -> d_numericos operadorAritmetico operacionAritmetica .

    SEMICOLON       reduce using rule 50 (operacionAritmetica -> d_numericos operadorAritmetico operacionAritmetica .)


state 128

    (51) operacionAritmetica -> error operadorAritmetico error .

    SEMICOLON       reduce using rule 51 (operacionAritmetica -> error operadorAritmetico error .)


state 129

    (95) readline -> READLINE LPAREN RPAREN .

    SEMICOLON       reduce using rule 95 (readline -> READLINE LPAREN RPAREN .)


state 130

    (79) arregloIndexado -> LCOR datos_comma RCOR .

    SEMICOLON       reduce using rule 79 (arregloIndexado -> LCOR datos_comma RCOR .)


state 131

    (76) arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado . NEWLINE RCOR

    NEWLINE         shift and go to state 140


state 132

    (77) cuerpoArregloDeclarado -> datos . ASSIGNATION datos
    (78) cuerpoArregloDeclarado -> datos . ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado

    ASSIGNATION     shift and go to state 141


state 133

    (80) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN . LKEY NEWLINE cuerpoFuncion RKEY

    LKEY            shift and go to state 142


state 134

    (81) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY . NEWLINE cuerpoFuncion RKEY

    NEWLINE         shift and go to state 143


state 135

    (85) argumentosFuncion -> argumentoFuncion argumentosFuncion .

    RPAREN          reduce using rule 85 (argumentosFuncion -> argumentoFuncion argumentosFuncion .)


state 136

    (82) invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .

    NEWLINE         reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    COMMENT1        reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    ECHO            reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    IF              reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    FOR             reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    FUNCTION_NAME   reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    $end            reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    RKEY            reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 82 (invocar -> FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON .)


state 137

    (91) datos_comma -> datos COMMA datos_comma .

    RPAREN          reduce using rule 91 (datos_comma -> datos COMMA datos_comma .)
    RCOR            reduce using rule 91 (datos_comma -> datos COMMA datos_comma .)


state 138

    (24) if -> IF LPAREN operacionRelacional RPAREN LKEY . NEWLINE programa RKEY
    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY . NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    NEWLINE         shift and go to state 144


state 139

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico . datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos                          shift and go to state 145
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 140

    (76) arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE . RCOR

    RCOR            shift and go to state 146


state 141

    (77) cuerpoArregloDeclarado -> datos ASSIGNATION . datos
    (78) cuerpoArregloDeclarado -> datos ASSIGNATION . datos COMMA NEWLINE cuerpoArregloDeclarado
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos                          shift and go to state 147
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 142

    (80) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY . NEWLINE cuerpoFuncion RKEY

    NEWLINE         shift and go to state 148


state 143

    (81) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE . cuerpoFuncion RKEY
    (92) cuerpoFuncion -> . programa RETURN expresion SEMICOLON NEWLINE
    (93) cuerpoFuncion -> . programa
    (94) cuerpoFuncion -> . RETURN expresion SEMICOLON NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    RETURN          shift and go to state 151
    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    cuerpoFuncion                  shift and go to state 149
    programa                       shift and go to state 150
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 144

    (24) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE . programa RKEY
    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE . programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    programa                       shift and go to state 152
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 145

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos . SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE

    SEMICOLON       shift and go to state 153


state 146

    (76) arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR .

    SEMICOLON       reduce using rule 76 (arregloDeclarado -> LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR .)


state 147

    (77) cuerpoArregloDeclarado -> datos ASSIGNATION datos .
    (78) cuerpoArregloDeclarado -> datos ASSIGNATION datos . COMMA NEWLINE cuerpoArregloDeclarado

    NEWLINE         reduce using rule 77 (cuerpoArregloDeclarado -> datos ASSIGNATION datos .)
    COMMA           shift and go to state 154


state 148

    (80) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE . cuerpoFuncion RKEY
    (92) cuerpoFuncion -> . programa RETURN expresion SEMICOLON NEWLINE
    (93) cuerpoFuncion -> . programa
    (94) cuerpoFuncion -> . RETURN expresion SEMICOLON NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    RETURN          shift and go to state 151
    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    cuerpoFuncion                  shift and go to state 155
    programa                       shift and go to state 150
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 149

    (81) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion . RKEY

    RKEY            shift and go to state 156


state 150

    (92) cuerpoFuncion -> programa . RETURN expresion SEMICOLON NEWLINE
    (93) cuerpoFuncion -> programa .

    RETURN          shift and go to state 157
    RKEY            reduce using rule 93 (cuerpoFuncion -> programa .)


state 151

    (94) cuerpoFuncion -> RETURN . expresion SEMICOLON NEWLINE
    (27) expresion -> . argumentos
    (28) expresion -> . invocar
    (29) expresion -> . operacionAritmetica
    (30) expresion -> . operacionRelacional
    (31) expresion -> . readline
    (32) expresion -> . arregloIndexado
    (33) expresion -> . arregloDeclarado
    (34) expresion -> . operacionLogica
    (35) expresion -> . operadorLogico
    (36) argumentos -> . datos COMMA argumentos
    (37) argumentos -> . datos
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (46) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (47) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (48) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (49) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (50) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (51) operacionAritmetica -> . error operadorAritmetico error
    (57) operacionRelacional -> . operacionRelacionalGeneral
    (58) operacionRelacional -> . operacionRelacionalNumerica
    (95) readline -> . READLINE LPAREN RPAREN
    (79) arregloIndexado -> . LCOR datos_comma RCOR
    (76) arregloDeclarado -> . LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (54) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (55) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (56) operacionLogica -> .
    (67) operadorLogico -> . LOGICAL_AND
    (68) operadorLogico -> . LOGICAL_OR
    (69) operadorLogico -> . LOGICAL_NOT
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (59) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (60) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (61) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (44) d_strings -> . STRING
    (45) d_booleanos -> . BOOLEAN

    FUNCTION_NAME   shift and go to state 17
    VARIABLE        shift and go to state 46
    error           shift and go to state 59
    READLINE        shift and go to state 62
    LCOR            shift and go to state 63
    SEMICOLON       reduce using rule 56 (operacionLogica -> .)
    LOGICAL_AND     shift and go to state 64
    LOGICAL_OR      shift and go to state 65
    LOGICAL_NOT     shift and go to state 66
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 34

    expresion                      shift and go to state 158
    argumentos                     shift and go to state 48
    invocar                        shift and go to state 49
    operacionAritmetica            shift and go to state 50
    operacionRelacional            shift and go to state 51
    readline                       shift and go to state 52
    arregloIndexado                shift and go to state 53
    arregloDeclarado               shift and go to state 54
    operacionLogica                shift and go to state 55
    operadorLogico                 shift and go to state 56
    datos                          shift and go to state 57
    d_numericos                    shift and go to state 58
    operacionRelacionalGeneral     shift and go to state 60
    operacionRelacionalNumerica    shift and go to state 61
    d_strings                      shift and go to state 28
    d_booleanos                    shift and go to state 30

state 152

    (24) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa . RKEY
    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa . RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE

    RKEY            shift and go to state 159


state 153

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON . operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (52) operacionModificadoras -> . VARIABLE INCREMENT
    (53) operacionModificadoras -> . VARIABLE DECREMENT

    VARIABLE        shift and go to state 160

    operacionModificadoras         shift and go to state 161

state 154

    (78) cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA . NEWLINE cuerpoArregloDeclarado

    NEWLINE         shift and go to state 162


state 155

    (80) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion . RKEY

    RKEY            shift and go to state 163


state 156

    (81) funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .

    NEWLINE         reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    COMMENT1        reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    ECHO            reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    VARIABLE        reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION        reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    IF              reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FOR             reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION_NAME   reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    $end            reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RETURN          reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RKEY            reduce using rule 81 (funcion -> FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)


state 157

    (92) cuerpoFuncion -> programa RETURN . expresion SEMICOLON NEWLINE
    (27) expresion -> . argumentos
    (28) expresion -> . invocar
    (29) expresion -> . operacionAritmetica
    (30) expresion -> . operacionRelacional
    (31) expresion -> . readline
    (32) expresion -> . arregloIndexado
    (33) expresion -> . arregloDeclarado
    (34) expresion -> . operacionLogica
    (35) expresion -> . operadorLogico
    (36) argumentos -> . datos COMMA argumentos
    (37) argumentos -> . datos
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON
    (46) operacionAritmetica -> . d_numericos operadorAritmetico d_numericos
    (47) operacionAritmetica -> . VARIABLE operadorAritmetico d_numericos
    (48) operacionAritmetica -> . d_numericos operadorAritmetico VARIABLE
    (49) operacionAritmetica -> . VARIABLE operadorAritmetico VARIABLE
    (50) operacionAritmetica -> . d_numericos operadorAritmetico operacionAritmetica
    (51) operacionAritmetica -> . error operadorAritmetico error
    (57) operacionRelacional -> . operacionRelacionalGeneral
    (58) operacionRelacional -> . operacionRelacionalNumerica
    (95) readline -> . READLINE LPAREN RPAREN
    (79) arregloIndexado -> . LCOR datos_comma RCOR
    (76) arregloDeclarado -> . LCOR NEWLINE cuerpoArregloDeclarado NEWLINE RCOR
    (54) operacionLogica -> . operacionRelacional operadorLogico operacionRelacional
    (55) operacionLogica -> . operacionRelacional operadorLogico operacionLogica
    (56) operacionLogica -> .
    (67) operadorLogico -> . LOGICAL_AND
    (68) operadorLogico -> . LOGICAL_OR
    (69) operadorLogico -> . LOGICAL_NOT
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (59) operacionRelacionalGeneral -> . datos operadorRelacionalGeneral datos
    (60) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico d_numericos
    (61) operacionRelacionalNumerica -> . datos operadorRelacionalNumerico error
    (44) d_strings -> . STRING
    (45) d_booleanos -> . BOOLEAN

    FUNCTION_NAME   shift and go to state 17
    VARIABLE        shift and go to state 46
    error           shift and go to state 59
    READLINE        shift and go to state 62
    LCOR            shift and go to state 63
    SEMICOLON       reduce using rule 56 (operacionLogica -> .)
    LOGICAL_AND     shift and go to state 64
    LOGICAL_OR      shift and go to state 65
    LOGICAL_NOT     shift and go to state 66
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 31
    BOOLEAN         shift and go to state 34

    expresion                      shift and go to state 164
    argumentos                     shift and go to state 48
    invocar                        shift and go to state 49
    operacionAritmetica            shift and go to state 50
    operacionRelacional            shift and go to state 51
    readline                       shift and go to state 52
    arregloIndexado                shift and go to state 53
    arregloDeclarado               shift and go to state 54
    operacionLogica                shift and go to state 55
    operadorLogico                 shift and go to state 56
    datos                          shift and go to state 57
    d_numericos                    shift and go to state 58
    operacionRelacionalGeneral     shift and go to state 60
    operacionRelacionalNumerica    shift and go to state 61
    d_strings                      shift and go to state 28
    d_booleanos                    shift and go to state 30

state 158

    (94) cuerpoFuncion -> RETURN expresion . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 165


state 159

    (24) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .
    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY . ELSE LKEY NEWLINE programa RKEY NEWLINE

    NEWLINE         reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    COMMENT1        reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    ECHO            reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    VARIABLE        reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    FUNCTION        reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    IF              reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    FOR             reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    FUNCTION_NAME   reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    $end            reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    RETURN          reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    RKEY            reduce using rule 24 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY .)
    ELSE            shift and go to state 166


state 160

    (52) operacionModificadoras -> VARIABLE . INCREMENT
    (53) operacionModificadoras -> VARIABLE . DECREMENT

    INCREMENT       shift and go to state 167
    DECREMENT       shift and go to state 168


state 161

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras . RPAREN LKEY NEWLINE programa RKEY NEWLINE

    RPAREN          shift and go to state 169


state 162

    (78) cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE . cuerpoArregloDeclarado
    (77) cuerpoArregloDeclarado -> . datos ASSIGNATION datos
    (78) cuerpoArregloDeclarado -> . datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado
    (38) datos -> . VARIABLE
    (39) datos -> . d_strings
    (40) datos -> . d_numericos
    (41) datos -> . d_booleanos
    (44) d_strings -> . STRING
    (42) d_numericos -> . NUMBER
    (43) d_numericos -> . FLOAT
    (45) d_booleanos -> . BOOLEAN

    VARIABLE        shift and go to state 27
    STRING          shift and go to state 31
    NUMBER          shift and go to state 32
    FLOAT           shift and go to state 33
    BOOLEAN         shift and go to state 34

    datos                          shift and go to state 132
    cuerpoArregloDeclarado         shift and go to state 170
    d_strings                      shift and go to state 28
    d_numericos                    shift and go to state 29
    d_booleanos                    shift and go to state 30

state 163

    (80) funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .

    NEWLINE         reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    COMMENT1        reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    ECHO            reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    VARIABLE        reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION        reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    IF              reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FOR             reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    FUNCTION_NAME   reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    $end            reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RETURN          reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)
    RKEY            reduce using rule 80 (funcion -> FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY .)


state 164

    (92) cuerpoFuncion -> programa RETURN expresion . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 171


state 165

    (94) cuerpoFuncion -> RETURN expresion SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 172


state 166

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE . LKEY NEWLINE programa RKEY NEWLINE

    LKEY            shift and go to state 173


state 167

    (52) operacionModificadoras -> VARIABLE INCREMENT .

    RPAREN          reduce using rule 52 (operacionModificadoras -> VARIABLE INCREMENT .)


state 168

    (53) operacionModificadoras -> VARIABLE DECREMENT .

    RPAREN          reduce using rule 53 (operacionModificadoras -> VARIABLE DECREMENT .)


state 169

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN . LKEY NEWLINE programa RKEY NEWLINE

    LKEY            shift and go to state 174


state 170

    (78) cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado .

    NEWLINE         reduce using rule 78 (cuerpoArregloDeclarado -> datos ASSIGNATION datos COMMA NEWLINE cuerpoArregloDeclarado .)


state 171

    (92) cuerpoFuncion -> programa RETURN expresion SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 175


state 172

    (94) cuerpoFuncion -> RETURN expresion SEMICOLON NEWLINE .

    RKEY            reduce using rule 94 (cuerpoFuncion -> RETURN expresion SEMICOLON NEWLINE .)


state 173

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY . NEWLINE programa RKEY NEWLINE

    NEWLINE         shift and go to state 176


state 174

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY . NEWLINE programa RKEY NEWLINE

    NEWLINE         shift and go to state 177


state 175

    (92) cuerpoFuncion -> programa RETURN expresion SEMICOLON NEWLINE .

    RKEY            reduce using rule 92 (cuerpoFuncion -> programa RETURN expresion SEMICOLON NEWLINE .)


state 176

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE . programa RKEY NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    programa                       shift and go to state 178
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    asignacion                     shift and go to state 8
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 177

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE . programa RKEY NEWLINE
    (1) programa -> . bloque
    (2) programa -> . bloque programa
    (3) programa -> . comment bloque programa
    (6) bloque -> . sentencia NEWLINE
    (7) bloque -> . sentencia
    (8) bloque -> . NEWLINE
    (4) comment -> . COMMENT1
    (5) comment -> . COMMENT1 NEWLINE
    (9) sentencia -> . print
    (10) sentencia -> . asignacion
    (11) sentencia -> . variable
    (12) sentencia -> . funcion
    (13) sentencia -> . if
    (14) sentencia -> . for
    (15) sentencia -> . invocar
    (21) print -> . ECHO datos SEMICOLON
    (22) print -> . ECHO SEMICOLON
    (23) print -> . ECHO argumentos SEMICOLON
    (16) asignacion -> . VARIABLE ASSIGN expresion SEMICOLON
    (17) variable -> . VARIABLE ASSIGN_ADD d_numericos SEMICOLON
    (18) variable -> . VARIABLE ASSIGN_SUB d_numericos SEMICOLON
    (19) variable -> . VARIABLE ASSIGN_ADD error SEMICOLON
    (20) variable -> . VARIABLE ASSIGN_SUB error SEMICOLON
    (80) funcion -> . FUNCTION FUNCTION_NAME LPAREN argumentosFuncion RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (81) funcion -> . FUNCTION FUNCTION_NAME LPAREN RPAREN LKEY NEWLINE cuerpoFuncion RKEY
    (24) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY
    (25) if -> . IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE
    (26) for -> . FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE
    (82) invocar -> . FUNCTION_NAME LPAREN datos_comma RPAREN SEMICOLON
    (83) invocar -> . FUNCTION_NAME LPAREN RPAREN SEMICOLON

    NEWLINE         shift and go to state 5
    COMMENT1        shift and go to state 6
    ECHO            shift and go to state 14
    VARIABLE        shift and go to state 15
    FUNCTION        shift and go to state 16
    IF              shift and go to state 18
    FOR             shift and go to state 19
    FUNCTION_NAME   shift and go to state 17

    asignacion                     shift and go to state 8
    programa                       shift and go to state 179
    bloque                         shift and go to state 2
    comment                        shift and go to state 3
    sentencia                      shift and go to state 4
    print                          shift and go to state 7
    variable                       shift and go to state 9
    funcion                        shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    invocar                        shift and go to state 13

state 178

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa . RKEY NEWLINE

    RKEY            shift and go to state 180


state 179

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa . RKEY NEWLINE

    RKEY            shift and go to state 181


state 180

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY . NEWLINE

    NEWLINE         shift and go to state 182


state 181

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY . NEWLINE

    NEWLINE         shift and go to state 183


state 182

    (25) if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .

    NEWLINE         reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    COMMENT1        reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    ECHO            reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    VARIABLE        reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION        reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    IF              reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    FOR             reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION_NAME   reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    $end            reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    RETURN          reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)
    RKEY            reduce using rule 25 (if -> IF LPAREN operacionRelacional RPAREN LKEY NEWLINE programa RKEY ELSE LKEY NEWLINE programa RKEY NEWLINE .)


state 183

    (26) for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .

    NEWLINE         reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    COMMENT1        reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    ECHO            reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    VARIABLE        reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION        reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    IF              reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    FOR             reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    FUNCTION_NAME   reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    $end            reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    RETURN          reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)
    RKEY            reduce using rule 26 (for -> FOR LPAREN asignacion VARIABLE operadorRelacionalNumerico datos SEMICOLON operacionModificadoras RPAREN LKEY NEWLINE programa RKEY NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 4 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 6 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 24 resolved as shift
